version: '3.0'

services:
  bosh-in-docker:
    privileged: true
    build: { context: ci/dockerfiles/bosh-in-docker }
    volumes:
    - director-creds:/shared-creds
    healthcheck:
      test: 'bash -c "source /shared-creds/bosh-creds.bash ; bosh vms"'
      start_period: 10m
      retries: 20

  unit-blobstore-azure:
    build: { context: ci/dockerfiles/run-golang-unit-tests }
    volumes: [./:/backup-and-restore-sdk-release]
    entrypoint: /backup-and-restore-sdk-release/src/azure-blobstore-backup-restore/scripts/run-unit-tests.bash

  unit-blobstore-gcs:
    build: { context: ci/dockerfiles/run-golang-unit-tests }
    volumes: [./:/backup-and-restore-sdk-release]
    entrypoint: /backup-and-restore-sdk-release/src/gcs-blobstore-backup-restore/scripts/run-unit-tests.bash

  unit-blobstore-s3:
    build: { context: ci/dockerfiles/run-golang-unit-tests }
    volumes: [./:/backup-and-restore-sdk-release]
    entrypoint: /backup-and-restore-sdk-release/src/s3-blobstore-backup-restore/scripts/run-unit-tests.bash

  unit-database:
    build: { context: ci/dockerfiles/run-golang-unit-tests }
    volumes: [./:/backup-and-restore-sdk-release]
    entrypoint: /backup-and-restore-sdk-release/src/database-backup-restore/scripts/run-unit-tests.bash

  unit-sdk-template:
    build: { context: ci/dockerfiles/sdk-template-unit-tests }
    volumes: [./:/backup-and-restore-sdk-release]

  system-db-mariadb:
    depends_on:
      bosh-in-docker:
        condition: service_healthy
      system-db-mariadb-backing-db:
        condition: service_healthy
    entrypoint: /backup-and-restore-sdk-release/src/database-backup-restore/scripts/run-system-db-tests-mariadb.bash
    build:
      context: ci/dockerfiles/run-system-db-tests/
    volumes:
    - ./:/backup-and-restore-sdk-release
    - mariadb-certs:/tls-certs
    - director-creds:/shared-creds
    environment:
    - STEMCELL_NAME=${STEMCELL_NAME}
    - BOSH_CREDS_SCRIPT=/shared-creds/bosh-creds.bash
    - MYSQL_USERNAME=root
    - MYSQL_HOSTNAME=system-db-mariadb-backing-db
    - MYSQL_PORT=3306
    - MYSQL_PASSWORD=${MARIADB_PASSWORD}

  system-db-mariadb-backing-db:
    build:
      context: ci/dockerfiles/run-system-db-tests/mariadb
      args:
      - MARIADB_VERSION=${MARIADB_VERSION}
    volumes:
    - mariadb-certs:/tls-certs
    environment:
    - MARIADB_ROOT_PASSWORD=${MARIADB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--silent"]

  system-db-mysql:
    depends_on:
      bosh-in-docker:
        condition: service_healthy
      system-db-mysql-backing-db:
        condition: service_healthy
    entrypoint: /backup-and-restore-sdk-release/src/database-backup-restore/scripts/run-system-db-tests-mysql.bash
    build:
      context: ci/dockerfiles/run-system-db-tests/
    volumes:
    - ./:/backup-and-restore-sdk-release
    - mysql-certs:/tls-certs
    - director-creds:/shared-creds
    environment:
    - STEMCELL_NAME=${STEMCELL_NAME}
    - BOSH_CREDS_SCRIPT=/shared-creds/bosh-creds.bash
    - MYSQL_USERNAME=root
    - MYSQL_HOSTNAME=system-db-mysql-backing-db
    - MYSQL_PORT=3306
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  system-db-mysql-backing-db:
    build:
      context: ci/dockerfiles/run-system-db-tests/mysql
      args:
      - MYSQL_VERSION=${MYSQL_VERSION}
    volumes:
    - mysql-certs:/tls-certs
    environment:
    - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--silent"]

  system-db-postgres:
    depends_on:
      bosh-in-docker:
        condition: service_healthy
      system-db-postgres-backing-db:
        condition: service_healthy
    entrypoint: /backup-and-restore-sdk-release/src/database-backup-restore/scripts/run-system-db-tests-postgres.bash
    build:
      context: ci/dockerfiles/run-system-db-tests/
    volumes:
    - ./:/backup-and-restore-sdk-release
    - postgres-certs:/tls-certs
    - director-creds:/shared-creds
    environment:
    - STEMCELL_NAME=${STEMCELL_NAME}
    - BOSH_CREDS_SCRIPT=/shared-creds/bosh-creds.bash
    - ENABLE_TLS=${ENABLE_TLS}
    - POSTGRES_USERNAME=postgres
    - POSTGRES_HOSTNAME=system-db-postgres-backing-db
    - POSTGRES_PORT=5432
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  system-db-postgres-backing-db:
    build:
      context: ci/dockerfiles/run-system-db-tests/postgres
      args:
      - POSTGRES_VERSION=${POSTGRES_VERSION}
    volumes:
    - postgres-certs:/tls-certs
    environment:
    - ENABLE_TLS=${ENABLE_TLS}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]


volumes:
# See https://docs.docker.com/compose/compose-file/#volumes - Specially:
### To reuse a volume across multiple services,
### a named volume MUST be declared in the top-level volumes key.
  mysql-certs:
  mariadb-certs:
  postgres-certs:
  director-creds:
