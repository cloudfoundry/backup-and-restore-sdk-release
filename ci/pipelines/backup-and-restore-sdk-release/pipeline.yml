---
#! This pipeline is set manually
#!
#!  To set the pipeline, run:
#!    fly set-pipeline -p backup-and-restore-sdk-release -c pipeline.yml

#! ************************************
#! Secrets we need to run this pipeline
#! ************************************

aws-region: &aws-region eu-west-1
aws-backup-region: &aws-backup-region eu-central-1

aws-access: &aws-access
#! the aws_access_key_id was needed on 2023-07-03 to access blobstores and test buckets in the BBRSDK AWS project. Generated using AWS cloudgate here: https://console.cloudgate.vmware.com/ui/#/cloud/116462199383/ou/ou-kw69-imy2w5hl/account/686843836666
  aws-access-key-id: &aws_access_key ((bbr/aws_s3_creds.access_key_id))
  aws-secret-access-key: &aws_secret_key ((bbr/aws_s3_creds.secret_access_key))
#! the aws_assumed_role_arn was needed on 2023-07-03 to access blobstores and test buckets in the BBRSDK AWS project. Generated using AWS cloudgate here: https://console.cloudgate.vmware.com/ui/#/cloud/116462199383/ou/ou-kw69-imy2w5hl/account/686843836666
  aws-assumed-role-arn: &aws_role_arn ((bbr/aws_s3_creds.assumed_role_arn))

#! following are the various snippets containing the aws secrets.
S3_AWS: &S3_AWS
  S3_ACCESS_KEY_ID: *aws_access_key
  S3_SECRET_ACCESS_KEY: *aws_secret_key
  S3_ASSUMED_ROLE_ARN: *aws_role_arn
AWS_ACCESS: &AWS_ACCESS
  AWS_ACCESS_KEY_ID: *aws_access_key
  AWS_SECRET_ACCESS_KEY: *aws_secret_key
  AWS_ROLE_ARN: *aws_role_arn #used by create-release/task.yml
  AWS_ASSUME_ROLE_ARN: *aws_role_arn #used by bump-golang/task.yml and bump-package/task.yml
  AWS_ASSUMED_ROLE_ARN: *aws_role_arn #sdk-system-blobstore/task.yml
aws_credentials_s3: &aws_credentials_s3
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  aws_role_arn: *aws_role_arn
  assume_role_arn: *aws_role_arn
aws_credentials_tf: &aws_credentials_tf
  aws_access_key: *aws_access_key
  aws_secret_key: *aws_secret_key
  aws_assumed_role_arn: *aws_role_arn

#! The following Azure credentials were needed on 2023-07-03 for testing our azure backupper.
#! Generated using our BBR Azure account here: https://portal.azure.com/#@pivotalio.onmicrosoft.com/resource/subscriptions/e9e0dbcc-42dd-45fb-823c-45103db37dd3/overview
#! you can sign in to azure at https://portal.azure.com using either username USER@vmware.com or USER@pivotalazure.vmware.com , depending on how old your login is.
azure:
   azure_credentials_storage_account_1: &azure_credentials_storage_account_1 ((bbr/azure_creds.storage_account_1))
   azure_credentials_storage_key_1: &azure_credentials_storage_key_1 ((bbr/azure_creds.storage_key_1))
   azure_credentials_storage_account_2: &azure_credentials_storage_account_2 ((bbr/azure_creds.storage_account_2))
   azure_credentials_storage_key_2: &azure_credentials_storage_key_2 ((bbr/azure_creds.storage_key_2))
   azure_storage_account_no_soft_delete: &azure_storage_account_no_soft_delete ((bbr/azure_creds.storage_account_no_soft_delete))
   azure_storage_key_no_soft_delete: &azure_storage_key_no_soft_delete ((bbr/azure_creds.storage_key_no_soft_delete))

gcp:
  #! service_accounts_bucket_owner_json_key was needed on 2023-07-03 for deploying database infra for testing. Generated using personal creds in the mapbu-cryogenics GCP account.
  service_accounts_bucket_owner_json_key: &service_accounts_bucket_owner_json_key ((gcp/service_accounts/bucket_owner.json_key))
#! service_accounts_gcp_cf_backup_and_restore_owner_role_json_key was needed on 2023-07-03 for actually running the GCP tests. Presumably it has lower privileges than the other two GCP keys?. Generated using personal creds in the mapbu-cryogenics GCP account.
  service_accounts_gcp_cf_backup_and_restore_owner_role_json_key: &service_accounts_gcp_cf_backup_and_restore_owner_role_json_key ((gcp/service_accounts/owner_role.json_key))
  #! service_accounts_gcp_mapbu_cryogenics_owner was needed on 2023-07-03 for cutting internet, and deploying database infra for testing. Generated using personal creds in the mapbu-cryogenics GCP account.
  service_accounts_gcp_mapbu_cryogenics_owner: &service_accounts_gcp_mapbu_cryogenics_owner ((gcp/service_accounts/owner.json_key))

#! gcp_certs_zip_pass was needed on 2023-07-03 to password protect the zip that contains connection credentials for GCP/RDS DB Instances. They are generated in `task: create-gcp-db-certs`. The password itself was manually generated and put into vault. 
gcp_certs_zip_pass: &gcp_certs_zip_pass ((bbr/db-cert-zip-password.pass))

git:
#! git_token was needed on 2023-07-03 to access PRs. Generated by using github account in lastpass at Shared-Cryogenics/infrastructure-root/github-ci-account
  token: &git_token ((github.access_token))
#! git_ssh_key was needed on 2023-07-03 to access private repos. Generated via uploading a public key to github.com
  ssh_key: &git_ssh_key ((github.ssh_key)) 

#! slack_webhook was needed on 2023-06-30 to notify the team when we automatically cut a new release. Copied from Shared-Cryogenics/infrastructure-root/slack-webhooks in lastpass, originally generated (we think) by HelpNow+ ticket.
slack_webhook: &slack_webhook ((slack.webhook))

#! toolsmiths_api_token was needed on 2023-03-30 for claiming CF-D environments to run integration tests. The token was given to us by the #cf-toolsmiths team, and is in lastpass at Shared-Cryogenics/infrastructure-root/cryo-toolsmiths-api-token
toolsmiths_api_token: &toolsmiths_api_token ((toolsmiths.api_token))

#! The following external DB creds were needed on 2023-07-03 for testing the BBR SDK with some external databases.
external_db_passwords: &external_db_passwords
  mysql_5_7_password: &mysql_5_7_password ((bbr/sdk-external-db-creds.rds_5_7_password))
  postgres_10_password: &postgres_10_password ((bbr/sdk-external-db-creds.rds_postgres_10_password))
  postgres_11_password: &postgres_11_password ((bbr/sdk-external-db-creds.rds_postgres_11_password))
  postgres_13_password: &postgres_13_password ((bbr/sdk-external-db-creds.rds_postgres_13_password))
  mariadb_10_password: &mariadb_10_password ((bbr/sdk-external-db-creds.rds_mariadb_10_password))

#! The following DB certs were needed on 2023-07-03 for deploying some databases, and then connecting to them in our tests. Generated out of whole cloth, they don't refer to any external infra.
mysql-5-7-deployment-name: &mysql-5-7-deployment-name mysql-5-7-dev
mysql-5-7-host: &mysql-5-7-host 10.0.255.9

mysql_common: &mysql_common
  MYSQL_PORT: &mysql-port 3306
  MYSQL_USERNAME: &mysql-username root
  MYSQL_PASSWORD: &mysql-password mysql_password
msysq_certs_common: &msysq_certs_common
  databases.ca: &mysql_ca_cert ((bbr/sdk-db-certs.mysql_ca_cert))
  databases.certificate: &mysql_cert ((bbr/sdk-db-certs.mysql_client_cert))
  databases.private_key: &mysql_private_key ((bbr/sdk-db-certs.mysql_client_key))

mysql_params_5: &mysql_params_5
  MYSQL_HOSTNAME: *mysql-5-7-host
  MYSQL_CA_CERT: *mysql_ca_cert
  MYSQL_CLIENT_CERT: *mysql_cert
  MYSQL_CLIENT_KEY: *mysql_private_key
  <<: *mysql_common

mysql-8-0-deployment-name: &mysql-8-0-deployment-name mysql-8-0-dev
mysql-8-0-host: &mysql-8-0-host 10.0.255.10

mysql_params_8: &mysql_params_8
  MYSQL_HOSTNAME: *mysql-8-0-host
  MYSQL_CA_CERT: *mysql_ca_cert
  MYSQL_CLIENT_CERT: *mysql_cert
  MYSQL_CLIENT_KEY: *mysql_private_key
  <<: *mysql_common

minio-access-key: &minio_access_key ((bbr/minio-creds.access_key))
minio-secret-key: &minio_secret_key ((bbr/minio-creds.secret_key))

postgres-10-deployment-name: &postgres-10-deployment-name postgres-10-dev
postgres-10-host: &postgres-10-host 10.0.255.12
postgres_common: &postgres_common
  POSTGRES_PORT: &postgres-port 5432
  POSTGRES_USERNAME: &postgres-username test_user
  POSTGRES_PASSWORD: &postgres-password postgres_password
pg_deployment_common: &pg_deployment_common
  db_username: *postgres-username
  db_password: *postgres-password

postgres-11-deployment-name: &postgres-11-deployment-name postgres-11-dev
postgres-11-host: &postgres-11-host 10.0.255.13

postgres-13-deployment-name: &postgres-13-deployment-name postgres-13-dev
postgres-13-host: &postgres-13-host 10.0.255.14

bosh-smiths-creds: &bosh-smiths-creds
  BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
  BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
  BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
  BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
  BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
  BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP))
  BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))

groups:
- name: test
  jobs:
  - lint-pipeline
  - unit-tests
  - check-for-cves
  - contract-tests
  - build-rc
  - deploy-s3-blobstore-sdk-with-iam-instance-profile
  - system-tests-blobstore-backuper-with-iam-instance-profile
  - claim-cf-deployment
  - deploy-s3-blobstore-sdk
  - deploy-database-sdk
  - deploy-mysql
  - deploy-postgres
  - deploy-gcs-blobstore-sdk
  - deploy-azure-blobstore-sdk
  - system-tests-external-dbs-gcp
  - system-tests-external-dbs-rds
  - system-tests-blobstore-backuper
  - unclaim-cf-deployment
  - claim-cf-deployment-airgapped
  - deploy-database-sdk-on-airgapped-env
  - system-tests-internal-dbs
  - unclaim-cf-deployment-airgapped
  - merge-pr

- name: bump
  jobs:
  - bump-openssl-1
  - bump-golang
  - bump-mariadb
  - bump-mysql
  - bump-ncurses
  - bump-postgresql
  - bump-boost
  - bump-libpcre2
  - bump-ci-tasks

- name: release
  jobs:
  - check-for-changes
  - create-final-patch

resource_types:
- name: semver-1-6 # Unlike the bundled version, supports AWS assume role; Remove after 1.6.0 or later becomes bundled
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/semver-resource
    tag: 1.6

- name: file-url
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/pivotalservices/concourse-curl-resource
    tag: latest

- name: bosh-deployment
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cloudfoundry/bosh-deployment-resource

- name: bosh-io-stemcell
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/concourse/bosh-io-stemcell-resource
    tag: latest

- name: custom-terraform
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/ljfranklin/terraform-resource
    tag: 0.14.2

- name: slack-notification
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cfcommunity/slack-notification-resource
    tag: latest

- name: pull-request
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cryogenics/pr-queue-resource
    tag: latest

- name: gitgat
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cryogenics/concourse-gitgat-resource
    tag: latest

- name: dynamic-metalink
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/dpb587/dynamic-metalink-resource
    tag: latest

- name: pcf-pool
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cftoolsmiths/toolsmiths-envs-resource
    tag: latest

resources:
- name: bash
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/bash

- name: image-cryogenics-essentials
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/cryogenics/essentials

- name: image-backup-restore
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/pcfplatformrecovery/backup-and-restore
    tag: latest

- name: pxc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/pxc-release

- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

- icon: github
  name:  backup-and-restore-sdk-release-bump-ci-tasks
  source:
    private_key: *git_ssh_key
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release
  type: git

- name: bosh-release-v271.7
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: 271.7.*

- name: bosh-release-v268.6
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: 268.6.*

- name: bosh-release-v260.3
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: 260.3

- name: postgres-release-v30
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
    regexp: 30

- name: postgres-release-v37
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
    regexp: 37

- name: cf-deployment-env
  icon: pool
  type: pcf-pool
  source:
    api_token: *toolsmiths_api_token
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cryo_cf-deployment

- name: rds-ca-bundle
  type: file-url
  icon: web-box
  source:
    url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
    filename: rds-combined-ca-bundle.pem

- name: terraform
  type: custom-terraform
  icon: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-terraform-states
      prefix: bbr-sdk-pr-tests
      credentials: *service_accounts_bucket_owner_json_key



- name: backup-and-restore-sdk-release
  type: pull-request
  check_every: 1m
  icon: source-pull
  source:
    repository: cloudfoundry/backup-and-restore-sdk-release
    base_branch: main
    disable_forks: true
    access_token: *git_token
    autosync_pr: true
    assign_to: "@me"

- name: version
  type: semver-1-6
  icon: tag
  source:
    bucket: backup-and-restore-sdk-releases
    region_name: *aws-region
    key: current-dev-version
    <<: *aws_credentials_s3

- name: release
  type: s3
  icon: database
  source:
    bucket: backup-and-restore-sdk-releases
    regexp: backup-and-restore-sdk-(.*).tgz
    region_name: *aws-region
    <<: *aws_credentials_s3


- name: slack-cryo-notification
  type: slack-notification
  icon: bell-ring
  source:
    url: *slack_webhook

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: *git_ssh_key
    branch: main

# A second resource is necessary for Golang bumps because when we push a branch
# to this repo via this resourse, the subsequent get steps will start tracking
# that branch, and not main as one would expect.
- name: backup-and-restore-sdk-release-golang-bump
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release.git
    private_key: *git_ssh_key
    disable_ci_skip: true

- name: backup-and-restore-sdk-release-main
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release.git
    private_key: *git_ssh_key
    branch: main
    disable_ci_skip: true

- name: every-week
  type: time
  source: 
    interval: 168h # 24h*7days

- name: github-release
  type: github-release
  icon: rocket
  source:
    user: cloudfoundry
    repository: backup-and-restore-sdk-release
    drafts: true
    access_token: *git_token

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

- name: daily-trigger
  type: time
  source:
    days: [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday' ]

- name: jammy-stemcell-aws
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

- name: jammy-stemcell
  icon: seed-outline
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent
    version_family: latest
  type: bosh-io-stemcell

- name: mysql-5-7-deployment
  type: bosh-deployment
  source:
    deployment: *mysql-5-7-deployment-name
    skip_check: true

- name: mysql-8-0-deployment
  type: bosh-deployment
  source:
    deployment: *mysql-8-0-deployment-name
    skip_check: true

- name: postgres-10-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-10-deployment-name
    skip_check: true

- name: postgres-11-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-11-deployment-name
    skip_check: true

- name: postgres-13-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-13-deployment-name
    skip_check: true

- name: aws-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true

- name: azure-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: azure-backuper
    skip_check: true
# this is generated in the setup-infrastructure pipeline as part of the setup-infrastructure task in the setup-infrastructure-aws-ec2 job
- name: director-with-iam-profile
  type: s3
  source:
    region_name: eu-west-1
    bucket: bbr-terraform-states
    versioned_file: sdk-config.yml
    <<: *aws_credentials_s3

- name: s3-backuper-with-iam-instance-profile-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true

- name: database-backup-restorer-deployment
  type: bosh-deployment
  source:
    deployment: database-backup-restorer
    skip_check: true

- name: gcp-db-certs-zip
  type: s3
  source:
    region_name: eu-west-1
    bucket: bbr-terraform-states
    versioned_file: gcp-db-certs.zip
    <<: *aws_credentials_s3

- name: gcs-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: gcs-backuper
    skip_check: true

- name: git-concourse-cve-scan
  type: git
  source:
    uri: git@github.com:pivotal/concourse-cve-scan.git
    branch: main
    private_key: *git_ssh_key
- name: github-release-tas-cve
  type: github-release
  source:
    access_token: *git_token
    repository: tas-cve
    user: pivotal

jobs:
- name: lint-pipeline
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
    - get: cryogenics-concourse-tasks
    - get: bash
  - task: check-pipeline-for-stray-secrets
    image: bash
    file: cryogenics-concourse-tasks/pipeline-linting/check-pipeline-for-stray-secrets/task.yml
    input_mapping:
      cryogenics-concourse-tasks: cryogenics-concourse-tasks
      pipeline-repo: backup-and-restore-sdk-release
    params:
      PIPELINE_TO_CHECK: ./pipeline-repo/ci/pipelines/backup-and-restore-sdk-release/pipeline.yml
- name: unit-tests
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: ["lint-pipeline"]
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - in_parallel:
    - task: sdk-template-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-template-unit-tests/task.yml
      image: image-cryogenics-essentials
    - task: databases-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/database-unit-tests/task.yml
      params:
        GITHUB_SDK_KEY: *git_ssh_key
      privileged: true
      image: image-cryogenics-essentials
    - task: s3-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      image: image-cryogenics-essentials
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package s3bucket
    - task: azure-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      image: image-cryogenics-essentials
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package contract_test
    - task: gcs-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      image: image-cryogenics-essentials
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package contract_test

- name: check-for-cves
  plan:
    - in_parallel:
        - get: git-concourse-cve-scan
        - get: github-release-tas-cve
        - get: backup-and-restore-sdk-release
          trigger: true
    - task: run-scan
      file: git-concourse-cve-scan/tasks/scan/scan.yml
      input_mapping:
        concourse-cve-scan: git-concourse-cve-scan
        tas-cve: github-release-tas-cve
        target-bosh-release: backup-and-restore-sdk-release
      params:
        DRY_RUN: true
        GRYPE_FAILURE_LEVEL: high #! Can be any of: none | negligible | low | medium | high | critical
        RELEASE_NAME: fim
        RELEASE_VERSION: pre-release-cve-scan

- name: contract-tests
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - unit-tests
    - get: image-cryogenics-essentials
  - in_parallel:
    - task: aws-s3-blobstore-contract-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore/s3bucket
        S3_LIVE_REGION: *aws-region
        S3_BACKUP_REGION: *aws-backup-region
        S3_ENDPOINT: ""
        S3_BIG_FILE_BUCKET: "large-blob-test-bucket-unversioned"
        <<: *S3_AWS
    - task: gcs-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      image: image-cryogenics-essentials
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore/contract_test
        GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        GCP_PROJECT_NAME: cf-backup-and-restore
    - task: azure-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      image: image-cryogenics-essentials
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore/contract_test
        AZURE_STORAGE_ACCOUNT: *azure_credentials_storage_account_1
        AZURE_STORAGE_KEY: *azure_credentials_storage_key_1
        AZURE_STORAGE_ACCOUNT_NO_SOFT_DELETE: *azure_storage_account_no_soft_delete
        AZURE_STORAGE_KEY_NO_SOFT_DELETE: *azure_storage_key_no_soft_delete
        AZURE_DIFFERENT_STORAGE_ACCOUNT: *azure_credentials_storage_account_2
        AZURE_DIFFERENT_STORAGE_KEY: *azure_credentials_storage_key_2
        AZURE_CONTAINER_NAME_MANY_FILES: bbr-test-many-blobs-azure-container

- name: build-rc
  serial: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [contract-tests]
      trigger: true
    - get: version
      params: {pre: rc}
  - task: create-dev-release
    file: backup-and-restore-sdk-release/ci/tasks/create-dev-release/task.yml
  - put: release
    params:
      file: backup-and-restore-sdk-release-build/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: deploy-s3-blobstore-sdk-with-iam-instance-profile
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: jammy-stemcell-aws
    - get: director-with-iam-profile
      trigger: true
  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - jammy-stemcell-aws/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: *aws-region
      source_file: director-with-iam-profile/sdk-config.yml

- name: system-tests-blobstore-backuper-with-iam-instance-profile
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - deploy-s3-blobstore-sdk-with-iam-instance-profile
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
    - get: director-with-iam-profile
  - in_parallel:
    - task: s3-with-iam-instance-profile
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        TEST_SUITE_NAME: s3
        FOCUS_SPEC: backs up and restores in-place # focus on one it to avoid redundant testing
        BOSH_DEPLOYMENT: s3-backuper
        BOSH_GW_USER: jumpbox
        AWS_TEST_BUCKET_NAME: iam-instance-role-test
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: iam-instance-role-test-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        <<: *AWS_ACCESS

  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      cleanup: true
      delete:
        enabled: true
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - jammy-stemcell-aws/*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: *aws-region
      source_file: director-with-iam-profile/sdk-config.yml
- name: claim-cf-deployment-airgapped
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
    - get: release
      trigger: true
      passed: [build-rc]
    - put: cf-deployment-env
      params:
        action: claim
        env_file: cf-deployment-env/metadata
  - task: cut-internet
    file: cryogenics-concourse-tasks/tasks/toolsmiths/cut-internet-from-cf-deployment/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env
      cryogenics-tasks: cryogenics-concourse-tasks
    params:
      GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_mapbu_cryogenics_owner
  - task: allow-tunnel-from-jumpbox-to-database-vms
    input_mapping:
      env: cf-deployment-env
    file: backup-and-restore-sdk-release/ci/tasks/allow-tunnel-from-jumpbox-to-database-vms/task.yml

- name: deploy-postgres
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: bpm-release
    - get: bosh-release-v260.3
    - get: bosh-release-v271.7
    - get: bosh-release-v268.6
    - get: postgres-release-v30
    - get: postgres-release-v37
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment-airgapped
    - get: release-tarball
      resource: release
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - in_parallel:
    - put: postgres-10-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-10.yml
        stemcells:
        - jammy-stemcell/*.tgz
        releases:
        - bpm-release/*.tgz
        - bosh-release-v268.6/*.tgz
        vars:
          deployment-name: *postgres-10-deployment-name
          db_host: *postgres-10-host
          <<: *pg_deployment_common
          availability_zone: z1
        source_file: source-file/source-file.yml
    - put: postgres-11-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-11.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          deployment-name: *postgres-11-deployment-name
          db_host: *postgres-11-host
          <<: *pg_deployment_common
          availability_zone: z1
        source_file: source-file/source-file.yml
        releases:
        - postgres-release-v37/*.tgz
        - bpm-release/*.tgz
    - put: postgres-13-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-13.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          deployment-name: *postgres-13-deployment-name
          db_host: *postgres-13-host
          <<: *pg_deployment_common
          availability_zone: z1
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - bosh-release-v271.7/*.tgz

- name: deploy-mysql
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: bpm-release
    - get: pxc-release
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment-airgapped
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - do:
    #! It seems these 2 deployments cannot be performed in parallel as they
    #! compile the same release against the same stemcell and therefore BOSH
    #! refuses to grant some locks.
    - put: mysql-5-7-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/mysql.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          mysql_version: 5.7
          deployment-name: *mysql-5-7-deployment-name
          db_password: *mysql-password
          db_host: *mysql-5-7-host
          availability_zone: z1
          <<: *msysq_certs_common
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - pxc-release/*.tgz
    - put: mysql-8-0-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/mysql.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          mysql_version: 8.0
          deployment-name: *mysql-8-0-deployment-name
          db_password: *mysql-password
          db_host: *mysql-8-0-host
          availability_zone: z1
          <<: *msysq_certs_common
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - pxc-release/*.tgz

- name: deploy-database-sdk-on-airgapped-env
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
        - claim-cf-deployment-airgapped
    - get: release-tarball
      trigger: true
      resource: release
      passed:
        - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
        - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - put: database-backup-restorer-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/database-backup-restorer.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/*.tgz
      vars:
        deployment-name: database-backup-restorer
        availability_zone: z1
      source_file: source-file/source-file.yml

- name: system-tests-internal-dbs
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk-on-airgapped-env
      - deploy-postgres
      - deploy-mysql
    - get: cert-store
      resource: gcp-db-certs-zip
    - get: cf-deployment-env
      trigger: true
      passed:
      - deploy-database-sdk-on-airgapped-env
      - deploy-postgres
      - deploy-mysql
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
  - task: alias-env
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    image: image-cryogenics-essentials
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - task: postgres-system-tests-10
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-10-host
        ZIP_PASSWORD: *gcp_certs_zip_pass
        TEST_SUITE_NAME: postgresql
        <<: *bosh-smiths-creds
        <<: *postgres_common
    - task: postgres-system-tests-11
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-11-host
        ZIP_PASSWORD: *gcp_certs_zip_pass
        TEST_SUITE_NAME: postgresql
        <<: *bosh-smiths-creds
        <<: *postgres_common
    - task: mysql-5-7-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false
        TEST_TLS_MUTUAL_TLS: false
        <<: *bosh-smiths-creds
        <<: *mysql_params_5
    - task: mysql-8-0-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false
        TEST_TLS_MUTUAL_TLS: false
        <<: *bosh-smiths-creds
        <<: *mysql_params_8

- name: unclaim-cf-deployment-airgapped
  plan:
  - get: cf-deployment-env
    trigger: true
    passed:
    - system-tests-internal-dbs
  - put: cf-deployment-env
    params:
      action: unclaim
      env_file: cf-deployment-env/metadata

- name: claim-cf-deployment
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release
      trigger: true
      passed: [build-rc]
    - put: cf-deployment-env
      params:
        action: claim
        env_file: cf-deployment-env/metadata
  - task: allow-tunnel-from-jumpbox-to-database-vms
    input_mapping:
      env: cf-deployment-env
    file: backup-and-restore-sdk-release/ci/tasks/allow-tunnel-from-jumpbox-to-database-vms/task.yml

- name: deploy-database-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - put: database-backup-restorer-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/database-backup-restorer.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: database-backup-restorer
        availability_zone: z1
      source_file: source-file/source-file.yml

- name: deploy-s3-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - put: aws-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        availability_zone: z1
        s3-bucket-name: bbr-system-test-bucket
        s3-cloned-bucket-name: bbr-system-test-bucket-clone
        s3-region: *aws-region
        s3-cloned-bucket-region: *aws-backup-region
        s3-unversioned-bucket-name-for-versioned-backuper: bbr-system-test-bucket-unversioned
        s3-unversioned-bucket-region-for-versioned-backuper: *aws-region
        s3-unversioned-bucket-name: bbr-system-test-s3-unversioned-bucket
        s3-unversioned-bucket-region: *aws-region
        s3-unversioned-backup-bucket-name: bbr-system-test-s3-unversioned-backup-bucket
        s3-unversioned-backup-bucket-region: us-east-1
        minio-access-key: *minio_access_key
        minio-secret-key: *minio_secret_key
        s3-unversioned-bpm-bucket-name: sdk-system-test-unversioned-bpm
        s3-unversioned-bpm-bucket-region: *aws-region
        s3-unversioned-bpm-backup-bucket-name: sdk-system-test-unversioned-bpm-backup
        s3-unversioned-bpm-backup-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-bucket-name: sdk-large-number-of-files
        s3-unversioned-large-number-of-files-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-backup-bucket-name: sdk-large-number-of-files-backup
        s3-unversioned-large-number-of-files-backup-bucket-region: *aws-region
        s3-unversioned-clone-bucket-name: sdk-unversioned-clone
        s3-unversioned-clone-bucket-region: us-east-1
        <<: *aws-access
      source_file: source-file/source-file.yml

- name: deploy-azure-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - put: azure-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/azure-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: azure-backuper
        azure-container-name: bbr-system-test-azure-container
        azure-storage-account: *azure_credentials_storage_account_1
        azure-storage-key: *azure_credentials_storage_key_1
        azure-different-storage-account: *azure_credentials_storage_account_2
        azure-different-storage-key: *azure_credentials_storage_key_2
        azure-different-container-name: bbr-system-test-azure-different-container
      source_file: source-file/source-file.yml

- name: deploy-gcs-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
  - put: gcs-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/gcs-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: gcs-backuper
        gcp-service-account-key: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        gcs-bucket-name: bbr-system-test-gcs-bucket
        gcs-backup-bucket-name: bbr-system-test-gcs-backup-bucket
      source_file: source-file/source-file.yml

- name: system-tests-external-dbs-gcp
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
    - get: image-cryogenics-essentials
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
    - get: gcp-db-certs-zip
    - get: cf-deployment-env
      trigger: true
      passed:
      - deploy-database-sdk
  - task: alias-env
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - do:
    - put: gcp-terraform
      resource: terraform
      params:
        terraform_source: cryogenics-concourse-tasks/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/gcp
        env_name: bbr-sdk-external-gcp-dbs
        delete_on_failure: true
        vars:
          director-external-ip: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP))
          director-jumpbox-ip: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP))
          gcp-key: *service_accounts_gcp_mapbu_cryogenics_owner
          mysql-5-7-password: ((bbr/sdk-external-db-creds.gcp_mysql_5_7_password))
      get_params:
        output_statefile: true
    - task: create-gcp-db-certs
      file: backup-and-restore-sdk-release/ci/tasks/create-gcp-db-certs/task.yml
      image: image-cryogenics-essentials
      input_mapping:
        terraform-state: gcp-terraform
      params:
        GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_mapbu_cryogenics_owner
        PROJECT_NAME: mapbu-cryogenics
        ZIP_PASSWORD: *gcp_certs_zip_pass
      ensure:
        put: gcp-db-certs-zip
        params:
          file: gcp-db-certs-zip/gcp-db-certs.zip
  - in_parallel:
    - do:
      - task: mysql-system-tests-5.7
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs-zip
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: mysql_5_7
          DB_TYPE: mysql
          #! if you change these names, you'll also need to change chem in backup-and-restore-sdk-release/ci/tasks/create-gcp-db-certs/task.sh
          MYSQL_CA_CERT_PATH: gcp-mysql_5_7-test-server-cert.pem
          MYSQL_CLIENT_CERT_PATH: gcp-mysql_5_7-test-client-cert.pem
          MYSQL_CLIENT_KEY_PATH: gcp-mysql_5_7-test-client-key.pem
          MYSQL_PASSWORD: ((bbr/sdk-external-db-creds.gcp_mysql_5_7_password))
          ZIP_PASSWORD: *gcp_certs_zip_pass
          TEST_SUITE_NAME: mysql
          TEST_TLS_VERIFY_IDENTITY: false

- name: system-tests-external-dbs-rds
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
    - get: cert-store
      resource: rds-ca-bundle
    - get: cf-deployment-env
      trigger: true
      passed:
      - deploy-database-sdk
  - put: terraform
    params:
      terraform_source: cryogenics-concourse-tasks/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/aws/
      env_name: bbr-sdk-external-rds-dbs
      delete_on_failure: true
      vars:
        aws_region: *aws-region
        <<: *external_db_passwords
        <<: *aws_credentials_tf
    get_params:
      output_statefile: true
  - task: alias-env
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - do:
      - task: postgres-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_PASSWORD: *postgres_10_password
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: *postgres_10_password
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_PASSWORD: *postgres_11_password
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: *postgres_11_password
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-13
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_13
          DB_TYPE: postgres
          POSTGRES_PASSWORD: *postgres_13_password
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-13
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_13
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: *postgres_13_password
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: maria-system-tests-10-6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: mariadb_10_6
          DB_TYPE: mysql
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          MYSQL_PASSWORD: *mariadb_10_password
          TEST_SUITE_NAME: mysql
          TEST_TLS_MUTUAL_TLS: false
          TEST_TLS_VERIFY_IDENTITY: false
    - do:
      - task: mysql-system-tests-5.7
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          TEST_TLS_MUTUAL_TLS: false
          DB_PREFIX: mysql_5_7
          MYSQL_PASSWORD: *mysql_5_7_password
          TEST_SUITE_NAME: mysql
          DB_TYPE: mysql
          MYSQL_PORT: 3306
          MYSQL_USERNAME: root
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem

- name: system-tests-blobstore-backuper
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
      - deploy-s3-blobstore-sdk
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk
    - get: cf-deployment-env
      trigger: true
      passed:
      - deploy-database-sdk
      - deploy-s3-blobstore-sdk
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk
    - get: cryogenics-concourse-tasks
      passed: [unit-tests]
  - task: alias-env
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - task: s3
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: s3
        BOSH_DEPLOYMENT: s3-backuper
        AWS_TEST_BUCKET_NAME: bbr-system-test-bucket
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: bbr-system-test-bucket-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-backup-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
        S3_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
        S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1
        S3_UNVERSIONED_BPM_BUCKET_NAME: sdk-system-test-unversioned-bpm
        S3_UNVERSIONED_BPM_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_NAME: sdk-system-test-unversioned-bpm-backup
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_NAME: sdk-large-number-of-files
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_NAME: sdk-large-number-of-files-backup
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_CLONE_BUCKET_NAME: sdk-unversioned-clone
        S3_UNVERSIONED_CLONE_BUCKET_REGION: us-east-1
        <<: *AWS_ACCESS
    - task: azure-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: azure
        BOSH_DEPLOYMENT: azure-backuper
        AZURE_STORAGE_ACCOUNT: *azure_credentials_storage_account_1
        AZURE_STORAGE_KEY: *azure_credentials_storage_key_1
        AZURE_CONTAINER_NAME: bbr-system-test-azure-container
        AZURE_DIFFERENT_STORAGE_ACCOUNT: *azure_credentials_storage_account_2
        AZURE_DIFFERENT_STORAGE_KEY: *azure_credentials_storage_key_2
        AZURE_DIFFERENT_CONTAINER_NAME: bbr-system-test-azure-different-container
    - task: gcs-blobstore-backuper-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: gcs
        GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        GCP_PROJECT_NAME: cf-backup-and-restore
        GCS_BUCKET_NAME: bbr-system-test-gcs-bucket
        GCS_BACKUP_BUCKET_NAME: bbr-system-test-gcs-backup-bucket
        GCS_CLONE_BUCKET_NAME: bbr-system-test-gcs-clone-bucket
        BOSH_DEPLOYMENT: gcs-backuper

- name: unclaim-cf-deployment
  plan:
  - get: cf-deployment-env
    trigger: true
    passed:
    - system-tests-external-dbs-gcp
    - system-tests-external-dbs-rds
    - system-tests-blobstore-backuper
  - put: cf-deployment-env
    params:
      action: unclaim
      env_file: cf-deployment-env/metadata

- name: merge-pr
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    trigger: true
    passed:
    - system-tests-internal-dbs
    - system-tests-external-dbs-gcp
    - system-tests-external-dbs-rds
    - system-tests-blobstore-backuper
    - system-tests-blobstore-backuper-with-iam-instance-profile
  - put: backup-and-restore-sdk-release
    params:
      merge: true
      repository: backup-and-restore-sdk-release

# Release
- name: check-for-changes
  plan:
  - in_parallel:
    - get: every-week
      trigger: true
    - get: backup-and-restore-sdk-release-main
    - get: version

- name: create-final-patch
  serial: true
  serial_groups: [version]
  ensure:
    do:
    - put: version
      params:
        bump: patch
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
      passed: [check-for-changes]
      trigger: true
    - get: version
      passed: [check-for-changes]
      params: {bump: final}
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - task: create-final-release
    file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
    input_mapping:
      release-repo: backup-and-restore-sdk-release-main
    output_mapping:
      updated-release-repo: backup-and-restore-sdk-final-release
      updated-release-tarball: backup-and-restore-sdk-final-release-tarball
    params:
      GIT_USERNAME: Backup & Restore Concourse
      GIT_EMAIL: cf-lazarus@pivotal.io
      FINAL: true
      RELEASE_NAME: backup-and-restore-sdk
      <<: *AWS_ACCESS
  - task: create-release-notes
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
    input_mapping:
      git-repo: backup-and-restore-sdk-release-main
    params:
      USE_LATEST_PUBLISHED_TAG: true
  - task: format-release-notes
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
    input_mapping:
      template-folder: cryogenics-concourse-tasks
    params:
      TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
  - put: backup-and-restore-sdk-release-main
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - load_var: version-number
    file: version/number
  - load_var: github-release-url
    file: github-release/url
  - put: slack-cryo-notification
    params:
      text: |
        *BBR SDK*: version `((.:version-number))` has been published 🎉
        Next steps (cc <!subteam^S028XABEHAP>):
          1. Review the release notes and undraft the release <((.:github-release-url))|here>.
 
# Dependency bumps
- name: bump-golang
  plan:
  - in_parallel:
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: golang-release
      trigger: true
    - get: backup-and-restore-sdk-release-main
      params:
        branch: main
  - task: bump-golang
    file: cryogenics-concourse-tasks/deps-automation/bump-golang/task.yml
    input_mapping:
      release: backup-and-restore-sdk-release-main
      vendored-package-release: golang-release
    output_mapping:
      release-with-updated-vendored-package: backup-and-restore-sdk-release-updated
    params:
      VENDORED_PACKAGE_NAME: golang-1-linux
      VENDOR_UPDATES_BRANCH: golang-vendor-updates
      <<: *AWS_ACCESS
  - task: update-go-directive-in-system-tests
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    image: image-cryogenics-essentials
    params:
      PATH_TO_GO_MODULE: src/system-tests
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-s3-blobstore-backup-restore
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    image: image-cryogenics-essentials
    params:
      PATH_TO_GO_MODULE: src/s3-blobstore-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-database-backup-restore
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    image: image-cryogenics-essentials
    params:
      PATH_TO_GO_MODULE: src/database-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-azure-blobstore-backup-restore
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    image: image-cryogenics-essentials
    params:
      PATH_TO_GO_MODULE: src/azure-blobstore-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: backup-and-restore-sdk-release-golang-bump
    params:
      repository: backup-and-restore-sdk-release-updated
      branch: &golang-vendor-branch bump-golang-vendor-((.:golang-release-version))
      force: true
  - task: create-golang-vendor-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: main
      BRANCH: *golang-vendor-branch
      LABELS: ci,bump-golang
      TITLE: Bump golang-1-linux to version ((.:golang-release-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-golang-bump

- name: bump-mariadb
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-backup-restore
    - get: daily-trigger
      trigger: true

  - task: bump-mariadb
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-backup-restore
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-mariadb.sh
    params:
      PR_BASE: main
      PR_LABELS: ci
      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-openssl-1
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-backup-restore
    - get: daily-trigger
      trigger: true

  - task: bump-openssl-1
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-backup-restore
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-openssl-1.sh
    params:
      PR_BASE: main
      PR_LABELS: ci
      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-mysql
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: daily-trigger
      trigger: true

  - task: bump-mysql
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-cryogenics-essentials
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-mysql.sh
    params:
      PR_BASE: main
      PR_LABELS: ci
      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-ncurses
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: daily-trigger
      trigger: true

  - task: bump-ncurses
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-cryogenics-essentials
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-ncurses.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-postgresql
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-backup-restore
    - get: daily-trigger
      trigger: true

  - task: bump-postgresql
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-backup-restore
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-postgresql.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-boost
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-backup-restore
    - get: daily-trigger
      trigger: true

  - task: bump-boost
    image: image-backup-restore
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-boost.sh
    params:
      PR_BASE: main
      PR_LABELS: ci
      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-libpcre2
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: daily-trigger
      trigger: true

  - task: bump-libpcre2
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    image: image-cryogenics-essentials
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-libpcre2.sh
    params:
      PR_BASE: main
      PR_LABELS: ci
      GH_TOKEN: *git_token
      <<: *AWS_ACCESS

- name: bump-ci-tasks
  plan:
    - in_parallel:
      - get: image-cryogenics-essentials
        trigger: true
      - get: cryogenics-concourse-tasks
      - get: backup-and-restore-sdk-release-main
    - in_parallel:
      - load_var: cryogenics-essentials-version
        file: image-cryogenics-essentials/tag
      - task: bump-tasks
        image: image-cryogenics-essentials
        file: cryogenics-concourse-tasks/deps-automation/bump-concourse-tasks/task.yml
        params:
          TASKS_FOLDER: ci/tasks/
        input_mapping:
          repo: backup-and-restore-sdk-release-main
          image: image-cryogenics-essentials
        output_mapping:
          repo: backup-and-restore-sdk-release-main
    - put: backup-and-restore-sdk-release-bump-ci-tasks
      params:
        repository: backup-and-restore-sdk-release-main
        branch: &bump-ci-task-branch bump-cryogenics-essentials-to-v((.:cryogenics-essentials-version))
        force: true
    - task: create-pull-request
      image: image-cryogenics-essentials
      file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
      params:
        BASE: main
        BRANCH: *bump-ci-task-branch
        LABELS: dependencies
        TITLE: Bump cryogenics/essentials to v((.:cryogenics-essentials-version))
        MESSAGE: |
          This is an automatically generated Pull Request from the Cryogenics CI Bot.
          I have detected a new version of [cryogenics/essentials](https://hub.docker.com/r/cryogenics/essentials/tags) and automatically bumped
          this package to benefit from the latest changes.
          If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
      input_mapping:
        source-repo:  backup-and-restore-sdk-release-bump-ci-tasks
