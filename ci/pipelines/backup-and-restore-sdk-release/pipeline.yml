---
#! This pipeline is set manually
#!
#!  To set the pipeline, run:
#!    fly -t bosh-ecosystem set-pipeline -p backup-and-restore-sdk-release -c ci/pipelines/backup-and-restore-sdk-release/pipeline.yml

#! ************************************
#! Secrets we need to run this pipeline
#! ************************************
secrets:
#! Created using `shepherd create service-account` after logging in with WS1.
- &shepherd_account_key ((bosh-ecosystem-shepherd-service-account))

#! gcr_viewer_key is used for getting concourse container images from the Cryogenics GCR instance. Currently bosh-ecosystem-concourse@cf-bosh-concourse.iam.gserviceaccount.com is granted access to the images.
- &gcr_viewer_key ((gcp_credentials_json))

- &aws-region eu-west-1
- &aws-backup-region eu-central-1
- &number_of_test_retries 3
- &number_of_claim_retries 5

- &aws-access
#! AWS access keys for the 686843836666 account
  aws-access-key-id: &aws_access_key ((bbr_aws_access_key.username))
  aws-secret-access-key: &aws_secret_key ((bbr_aws_access_key.password))
  aws-assumed-role-arn: &aws_role_arn ((bbr_aws_access_key.role_arn))

#! following are the various snippets containing the aws secrets.
- &S3_AWS
  S3_ACCESS_KEY_ID: *aws_access_key
  S3_SECRET_ACCESS_KEY: *aws_secret_key
  S3_ASSUMED_ROLE_ARN: *aws_role_arn
- &AWS_ACCESS
  AWS_ACCESS_KEY_ID: *aws_access_key
  AWS_SECRET_ACCESS_KEY: *aws_secret_key
  AWS_ROLE_ARN: *aws_role_arn #used by create-release/task.yml
  AWS_ASSUME_ROLE_ARN: *aws_role_arn #used by bump-golang/task.yml and bump-package/task.yml
  AWS_ASSUMED_ROLE_ARN: *aws_role_arn #sdk-system-blobstore/task.yml
- &aws_credentials_s3
  access_key_id: *aws_access_key
  secret_access_key: *aws_secret_key
  aws_role_arn: *aws_role_arn
  assume_role_arn: *aws_role_arn
- &aws_credentials_tf
  aws_access_key: *aws_access_key
  aws_secret_key: *aws_secret_key
  aws_assumed_role_arn: *aws_role_arn

#! Azure credentials for 3 separate storage accounts. Currently in the CF-bosh-toronto-king subscription
- &azure_credentials_storage_account_1 ((bbr_azure_credentials.storage_account))
- &azure_credentials_storage_key_1 ((bbr_azure_credentials.storage_account_key))
- &azure_credentials_storage_account_2 ((bbr_azure_credentials.storage_account2))
- &azure_credentials_storage_key_2 ((bbr_azure_credentials.storage_account2_key))
- &azure_storage_account_no_soft_delete ((bbr_azure_credentials.storage_account_no_soft_delete))
- &azure_storage_key_no_soft_delete ((bbr_azure_credentials.storage_account_no_soft_delete_key))

  #! service_accounts_bucket_owner_json_key was needed on 2023-07-03 for deploying database infra for testing. Generated using personal creds in the mapbu-cryogenics GCP account.
- &service_accounts_bucket_owner_json_key ((gcp_credentials_json))
#! service_accounts_gcp_cf_backup_and_restore_owner_role_json_key was needed on 2023-07-03 for actually running the GCP tests. Presumably it has lower privileges than the other two GCP keys?. Generated using personal creds in the mapbu-cryogenics GCP account.
- &service_accounts_gcp_cf_backup_and_restore_owner_role_json_key ((gcp_credentials_json))

#! github_access_token is required to create PRs against repos used in this pipeline and access github releases.
- &git_token ((github_read_write_token))

#! github_deploy_keys are generated in credhub and the public keys added to the individual repos
- &github_deploy_key_concourse-cve-scan ((github_deploy_key_concourse-cve-scan.private_key))
- &github_deploy_key_cryogenics-concourse-tasks ((github_deploy_key_cryogenics-concourse-tasks.private_key))
- &github_deploy_key_backup-and-restore-sdk-release ((github_deploy_key_backup-and-restore-sdk-release.private_key))

#! github email and user used for creating commits
- &github_email tas-bosh-ecosystem.pdl@broadcom.com
- &github_user "Bosh Ecosystem"

#! gchat webhook is used to send us ci status messages. It was created in gchat space settings after logging in with personal creds
- &gchat_webhook ((gchat-webhook-dap-bosh-ecosystem-dev-GChatVersion-TaylorsVersion))

#! The following external DB creds were needed on 2023-07-03 for testing the BBR SDK with some external databases.
- &external_db_passwords
  postgres_11_password: &postgres_11_password ((rds_postgres_11_password))
  postgres_13_password: &postgres_13_password ((rds_postgres_13_password))
  postgres_15_password: &postgres_15_password ((rds_postgres_15_password))
  mariadb_10_password: &mariadb_10_password ((rds_mariadb_10_password))

- &mysql_common
  MYSQL_PORT: 3306
  MYSQL_USERNAME: root
  MYSQL_PASSWORD: &mysql-password mysql_password
- &mysql_certs_common
  databases.ca: &mysql_ca_cert ((mysql_tls.ca))
  databases.certificate: &mysql_cert ((mysql_tls.certificate))
  databases.private_key: &mysql_private_key ((mysql_tls.private_key))


- &mysql-5-7-deployment-name mysql-5-7-dev
- &mysql-5-7-host 10.0.255.9

- &mysql_params_5_7
  MYSQL_HOSTNAME: *mysql-5-7-host
  MYSQL_CA_CERT: *mysql_ca_cert
  MYSQL_CLIENT_CERT: *mysql_cert
  MYSQL_CLIENT_KEY: *mysql_private_key
  <<: *mysql_common


- &mysql-8-0-deployment-name mysql-8-0-dev
- &mysql-8-0-host 10.0.255.10

- &mysql_params_8
  MYSQL_HOSTNAME: *mysql-8-0-host
  MYSQL_CA_CERT: *mysql_ca_cert
  MYSQL_CLIENT_CERT: *mysql_cert
  MYSQL_CLIENT_KEY: *mysql_private_key
  <<: *mysql_common

- &minio_access_key ((minio_user.username))
- &minio_secret_key ((minio_user.password))

- &postgres_common
  POSTGRES_PORT: 5432
  POSTGRES_USERNAME: &postgres-username test_user
  POSTGRES_PASSWORD: &postgres-password postgres_password
- &pg_deployment_common
  db_username: *postgres-username
  db_password: *postgres-password

- &postgres-11-deployment-name postgres-11-dev
- &postgres-11-host 10.0.255.13

- &postgres-13-deployment-name postgres-13-dev
- &postgres-13-host 10.0.255.14

- &bosh-smiths-creds
  BOSH_ENVIRONMENT: ((.:pooled-env.BOSH_ENVIRONMENT))
  BOSH_CLIENT: ((.:pooled-env.BOSH_CLIENT))
  BOSH_CLIENT_SECRET: ((.:pooled-env.BOSH_CLIENT_SECRET))
  BOSH_CA_CERT: ((.:pooled-env.BOSH_CA_CERT))
  BOSH_GW_USER: ((.:pooled-env.INSTANCE_JUMPBOX_USER))
  BOSH_GW_HOST: ((.:pooled-env.INSTANCE_JUMPBOX_EXTERNAL_IP))
  BOSH_GW_PRIVATE_KEY: ((.:pooled-env.INSTANCE_JUMPBOX_PRIVATE))

- &docker_username ((docker.username))
- &docker_password ((docker.password))

groups:
- name: test
  jobs:
  - lint-pipeline
  - unit-tests
  - check-for-cves
  - contract-tests
  - build-rc
  - deploy-s3-blobstore-sdk-with-iam-instance-profile
  - system-tests-blobstore-backuper-with-iam-instance-profile
  - claim-cf-deployment
  - deploy-s3-blobstore-sdk
  - deploy-database-sdk
  - deploy-mysql
  - deploy-postgres
  - deploy-gcs-blobstore-sdk
  - deploy-azure-blobstore-sdk
  - system-tests-external-dbs-rds
  - system-tests-blobstore-backuper
  - unclaim-cf-deployment
  - claim-cf-deployment-airgapped
  - deploy-database-sdk-on-airgapped-env
  - system-tests-internal-dbs
  - unclaim-cf-deployment-airgapped
  - merge-pr

- name: bump
  jobs:
  - bump-golang
  - bump-ruby
  - bump-mariadb
  - bump-mysql-8
  - bump-ncurses
  - bump-libpcre2
  - bump-postgres-11
  - bump-postgres-13
  - bump-postgres-15

- name: release
  jobs:
  - check-for-changes
  - create-final-patch
  - manual-bump-bbr-sdk-major
  - manual-bump-bbr-sdk-patch
  - manual-bump-bbr-sdk-minor

resource_types:
- name: ftp
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/concourse-resources/concourse-ftp-resource
    username: _json_key
    password: *gcr_viewer_key
    
- name: shepherd
  source:
    tag: v1
    repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
    username: _json_key
    password: *gcr_viewer_key
  type: registry-image

- name: file-url
  type: registry-image
  source:
    repository: pivotalservices/concourse-curl-resource
    username: *docker_username
    password: *docker_password

- name: bosh-deployment
  type: registry-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
    username: *docker_username
    password: *docker_password

- name: custom-terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.14.2
    username: *docker_username
    password: *docker_password

- name: google-chat-notify-resource
  type: registry-image
  source:
    repository: springio/google-chat-notify-resource
    username: *docker_username
    password: *docker_password
    tag: 0.0.1-SNAPSHOT

- name: pull-request
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/concourse-resources/pr-queue-resource
    username: _json_key
    password: *gcr_viewer_key

- name: http
  type: registry-image
  source:
    repository: aequitas/http-resource
    username: ((docker.username))
    password: ((docker.password))
resources:
- name: ruby-version
  type: http
  source:
    index: https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/stable.txt
    regex: "(?P<version>3.3.*)"
    uri: https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/stable.txt

- name: mariadb-10-6-blob
  type: ftp
  source:
    url: https://archive.mariadb.org/mariadb-10.6.*/source/
    version_regex: "mariadb-(?P<version>10.6.[0-9]*).tar.gz$" 
- name: ncurses-blob
  type: ftp
  source:
    url: ftp://ftp.gnu.org/pub/gnu/ncurses/
    version_regex: "ncurses-(?P<version>[0-9]*.[0-9]*).tar.gz$"
- name: postgres-11-blob
  type: ftp
  source:
    url: https://ftp.postgresql.org/pub/source/v11.*/
    version_regex: postgresql-(?P<version>[0-9]*.[0-9]*).tar.gz$
- name: postgres-13-blob
  type: ftp
  source:
    url: https://ftp.postgresql.org/pub/source/v13.*/
    version_regex: postgresql-(?P<version>[0-9]*.[0-9]*).tar.gz$
- name: postgres-15-blob
  type: ftp
  source:
    url: https://ftp.postgresql.org/pub/source/v15.*/
    version_regex: postgresql-(?P<version>[0-9]*.[0-9]*).tar.gz$
- name: libpcre2-blob
  type: github-release
  source:
    owner: PCRE2Project
    repository: pcre2
    access_token: *git_token
    tag_filter: pcre2-([0-9]*.[0-9]*)
    order_by: time

- name: mysql-server-8-blob
  type: ftp
  source:
    url: "https://dev.mysql.com/downloads/mysql/8.0.html?tpl=platform&os=2&version=8.0&osva=#downloads"
    static_download_url_path: "https://dev.mysql.com/get/Downloads/MySQL-8.0/"
    version_regex: "mysql-(?P<version>[0-9]*.[0-9]*.[0-9]*)-linux-glibc.*-x86_64-minimal.tar.xz"
    filename_mode: true

- name: image-cryogenics-essentials
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/mapbu-cryogenics/essentials/cryo-essentials
    username: _json_key
    password: *gcr_viewer_key

- name: pxc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/pxc-release

- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

- name: bosh-release-v271.7
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: 271.7.*

- name: bosh-release-v268.6
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: 268.6.*

- name: bosh-release-v260.3
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
    regexp: "260.3"

- name: postgres-release-v30
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
    regexp: "30"

- name: postgres-release-v37
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release
    regexp: "37"

- name: cf-deployment-env-non-airgapped
  icon: pool
  type: shepherd
  source:
    url: https://v2.shepherd.run
    service-account-key: *shepherd_account_key
    compatibility-mode: environments-app
    lease:
      namespace: cryogenics
      pool:
        namespace: official
        name: cfd

- name: cf-deployment-env-airgapped
  type: shepherd
  source:
    url: https://v2.shepherd.run
    service-account-key: *shepherd_account_key
    lease:
      namespace: cryogenics
      template:
        namespace: binj
        name: gcp-cfd-airgap-template
        revision: "1.2"

- name: rds-ca-bundle
  type: file-url
  icon: web-box
  source:
    url: https://truststore.pki.rds.amazonaws.com/eu-west-1/eu-west-1-bundle.pem
    filename: rds-combined-ca-bundle.pem

- name: terraform
  type: custom-terraform
  icon: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-pipeline
      prefix: bbr-sdk-pr-tests
      credentials: *service_accounts_bucket_owner_json_key

- name: backup-and-restore-sdk-release
  type: pull-request
  check_every: 1m
  icon: source-pull
  source:
    repository: cloudfoundry/backup-and-restore-sdk-release
    base_branch: main
    disable_forks: true
    access_token: *git_token
    autosync_pr: true
    assign_to: "@me"

- name: version
  type: semver
  icon: tag
  source:
    bucket: backup-and-restore-sdk-releases
    region_name: *aws-region
    key: current-dev-version
    <<: *aws_credentials_s3

- name: release
  type: s3
  icon: database
  source:
    bucket: backup-and-restore-sdk-releases
    regexp: backup-and-restore-sdk-(.*).tgz
    region_name: *aws-region
    <<: *aws_credentials_s3

- name: gchat-cryo-notification
  type: google-chat-notify-resource
  source:
    url: *gchat_webhook

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: *github_deploy_key_cryogenics-concourse-tasks
    branch: main

- name: backup-and-restore-sdk-release-write-only
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release.git
    private_key: *github_deploy_key_backup-and-restore-sdk-release
    disable_ci_skip: true
    commit_filter:
      exclude:
      - ;resource comment; This resource is used exclusively for pushing new changes

- name: backup-and-restore-sdk-release-main
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release.git
    private_key: *github_deploy_key_backup-and-restore-sdk-release
    branch: main
    disable_ci_skip: true

- name: every-week
  type: time
  source: 
    interval: 168h # 24h*7days

- name: github-release
  type: github-release
  icon: rocket
  source:
    user: cloudfoundry
    repository: backup-and-restore-sdk-release
    access_token: *git_token

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

- name: jammy-stemcell-aws
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

- name: jammy-stemcell
  icon: seed-outline
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent
    version_family: latest
  type: bosh-io-stemcell

- name: mysql-8-0-deployment
  type: bosh-deployment
  source:
    deployment: *mysql-8-0-deployment-name
    skip_check: true

- name: mysql-5-7-deployment
  type: bosh-deployment
  source:
    deployment: *mysql-5-7-deployment-name
    skip_check: true

- name: postgres-11-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-11-deployment-name
    skip_check: true

- name: postgres-13-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-13-deployment-name
    skip_check: true

- name: aws-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true

- name: azure-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: azure-backuper
    skip_check: true
# this is generated in the setup-infrastructure pipeline as part of the setup-infrastructure task in the setup-infrastructure-aws-ec2 job
- name: director-with-iam-profile
  type: s3
  source:
    region_name: eu-west-1
    bucket: bbr-terraform-states
    versioned_file: sdk-config.yml
    <<: *aws_credentials_s3

- name: s3-backuper-with-iam-instance-profile-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true

- name: database-backup-restorer-deployment
  type: bosh-deployment
  source:
    deployment: database-backup-restorer
    skip_check: true

- name: gcp-db-certs-zip
  type: s3
  source:
    region_name: eu-west-1
    bucket: bbr-terraform-states
    versioned_file: gcp-db-certs.zip
    <<: *aws_credentials_s3

- name: gcs-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: gcs-backuper
    skip_check: true

- name: git-concourse-cve-scan
  type: git
  source:
    uri: git@github.com:pivotal/concourse-cve-scan.git
    branch: main
    private_key: *github_deploy_key_concourse-cve-scan
- name: github-release-tas-cve
  type: github-release
  source:
    access_token: *git_token
    repository: tas-cve
    user: pivotal

jobs:
- name: lint-pipeline
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - task: check-pipeline-for-stray-secrets
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/pipeline-linting/check-pipeline-for-stray-secrets/task.yml
    input_mapping:
      cryogenics-concourse-tasks: cryogenics-concourse-tasks
      pipeline-repo: backup-and-restore-sdk-release
    params:
      PIPELINE_TO_CHECK: ./pipeline-repo/ci/pipelines/backup-and-restore-sdk-release/pipeline.yml
- name: unit-tests
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: ["lint-pipeline"]
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - in_parallel:
    - task: sdk-template-unit-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-template-unit-tests/task.yml
    - task: databases-unit-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/database-unit-tests/task.yml
      params:
        GITHUB_SDK_KEY: *github_deploy_key_backup-and-restore-sdk-release
      privileged: true
    - task: s3-blobstore-unit-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package s3bucket
    - task: azure-blobstore-unit-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package contract_test
    - task: gcs-blobstore-unit-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skip-package contract_test

- name: check-for-cves
  plan:
    - in_parallel:
        - get: git-concourse-cve-scan
        - get: github-release-tas-cve
        - get: backup-and-restore-sdk-release
          trigger: true
    - task: run-scan
      file: git-concourse-cve-scan/tasks/scan/scan.yml
      input_mapping:
        concourse-cve-scan: git-concourse-cve-scan
        tas-cve: github-release-tas-cve
        target-bosh-release: backup-and-restore-sdk-release
      params:
        DRY_RUN: true
        GRYPE_FAILURE_LEVEL: high #! Can be any of: none | negligible | low | medium | high | critical
        RELEASE_NAME: fim
        RELEASE_VERSION: pre-release-cve-scan

- name: contract-tests
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - unit-tests
    - get: image-cryogenics-essentials
  - in_parallel:
    - task: aws-s3-blobstore-contract-tests
      image: image-cryogenics-essentials
      attempts: *number_of_test_retries
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore/s3bucket
        S3_LIVE_REGION: *aws-region
        S3_BACKUP_REGION: *aws-backup-region
        S3_ENDPOINT: ""
        S3_BIG_FILE_BUCKET: "large-blob-test-bucket-unversioned"
        <<: *S3_AWS
    - task: gcs-blobstore-contract-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore/contract_test
        GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        GCP_PROJECT_NAME: cf-bosh-concourse
    - task: azure-blobstore-contract-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore/contract_test
        AZURE_STORAGE_ACCOUNT: *azure_credentials_storage_account_1
        AZURE_STORAGE_KEY: *azure_credentials_storage_key_1
        AZURE_STORAGE_ACCOUNT_NO_SOFT_DELETE: *azure_storage_account_no_soft_delete
        AZURE_STORAGE_KEY_NO_SOFT_DELETE: *azure_storage_key_no_soft_delete
        AZURE_DIFFERENT_STORAGE_ACCOUNT: *azure_credentials_storage_account_2
        AZURE_DIFFERENT_STORAGE_KEY: *azure_credentials_storage_key_2
        AZURE_CONTAINER_NAME_MANY_FILES: bbr-test-many-blobs-azure-container

- name: build-rc
  serial: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [contract-tests]
      trigger: true
    - get: image-cryogenics-essentials
    - get: version
      params: {pre: rc}
  - task: create-dev-release
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/create-dev-release/task.yml
  - put: release
    params:
      file: backup-and-restore-sdk-release-build/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: deploy-s3-blobstore-sdk-with-iam-instance-profile
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: jammy-stemcell-aws
    - get: director-with-iam-profile
      trigger: true
  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - jammy-stemcell-aws/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: *aws-region
      source_file: director-with-iam-profile/sdk-config.yml

- name: system-tests-blobstore-backuper-with-iam-instance-profile
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed:
      - deploy-s3-blobstore-sdk-with-iam-instance-profile
    - get: cryogenics-concourse-tasks
    - get: director-with-iam-profile
    - get: image-cryogenics-essentials
  - in_parallel:
    - task: s3-with-iam-instance-profile
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        TEST_SUITE_NAME: s3
        FOCUS_SPEC: backs up and restores in-place # focus on one it to avoid redundant testing
        BOSH_DEPLOYMENT: s3-backuper
        BOSH_GW_USER: ubuntu
        AWS_TEST_BUCKET_NAME: iam-instance-role-test
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: iam-instance-role-test-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        <<: *AWS_ACCESS

  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      cleanup: true
      delete:
        enabled: true
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - jammy-stemcell-aws/*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: *aws-region
      source_file: director-with-iam-profile/sdk-config.yml
- name: claim-cf-deployment-airgapped
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: cryogenics-concourse-tasks
    - get: release
      trigger: true
      passed: [build-rc]
    - get: image-cryogenics-essentials
    - put: cf-deployment-env-airgapped
      attempts: *number_of_claim_retries
      timeout: 6h
      params:
        action: create
        duration: 24h
        resource: cf-deployment-env-airgapped
        timeout: 6h
  - task: update-cloud-config
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/update-cloud-config/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-airgapped
- name: deploy-postgres
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: bpm-release
    - get: bosh-release-v260.3
    - get: bosh-release-v271.7
    - get: bosh-release-v268.6
    - get: postgres-release-v30
    - get: postgres-release-v37
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment-airgapped
    - get: release-tarball
      resource: release
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: cf-deployment-env-airgapped
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-airgapped
  - in_parallel:
    - put: postgres-11-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-11.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          deployment-name: *postgres-11-deployment-name
          db_host: *postgres-11-host
          <<: *pg_deployment_common
          availability_zone: z1
          vm_extensions: ["cf-tcp-router-network-properties"]
        ops_files: 
        - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
        source_file: source-file/source-file.yml
        releases:
        - postgres-release-v37/*.tgz
        - bpm-release/*.tgz
    - put: postgres-13-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-13.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          deployment-name: *postgres-13-deployment-name
          db_host: *postgres-13-host
          <<: *pg_deployment_common
          availability_zone: z1
          vm_extensions: ["cf-tcp-router-network-properties"]
        ops_files: 
        - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - bosh-release-v271.7/*.tgz

- name: deploy-mysql
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: bpm-release
    - get: pxc-release
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment-airgapped
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: cf-deployment-env-airgapped
      trigger: true
      passed:
      - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-airgapped
  - do:
    #! It seems that 2 deployments cannot be performed in parallel if they
    #! compile the same release against the same stemcell and therefore BOSH
    #! refuses to grant some locks.
    - put: mysql-8-0-deployment
      timeout: 2h
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/mysql.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          mysql_version: "8.0"
          deployment-name: *mysql-8-0-deployment-name
          db_password: *mysql-password
          db_host: *mysql-8-0-host
          availability_zone: z1
          <<: *mysql_certs_common
          vm_extensions: ["cf-tcp-router-network-properties"]
        ops_files: 
        - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - pxc-release/*.tgz
    - put: mysql-5-7-deployment
      timeout: 2h
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/mysql.yml
        stemcells:
        - jammy-stemcell/*.tgz
        vars:
          mysql_version: "5.7"
          deployment-name: *mysql-5-7-deployment-name
          db_password: *mysql-password
          db_host: *mysql-5-7-host
          availability_zone: z1
          <<: *mysql_certs_common
          vm_extensions: ["cf-tcp-router-network-properties"]
        ops_files: 
        - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
        source_file: source-file/source-file.yml
        releases:
        - bpm-release/*.tgz
        - pxc-release/*.tgz

- name: deploy-database-sdk-on-airgapped-env
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
        - claim-cf-deployment-airgapped
    - get: release-tarball
      trigger: true
      resource: release
      passed:
        - claim-cf-deployment-airgapped
    - get: jammy-stemcell
    - get: image-cryogenics-essentials
    - get: cf-deployment-env-airgapped
      trigger: true
      passed:
        - claim-cf-deployment-airgapped
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-airgapped
  - put: database-backup-restorer-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/database-backup-restorer.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/*.tgz
      vars:
        deployment-name: database-backup-restorer
        availability_zone: z1
        vm_extensions: ["cf-tcp-router-network-properties"]
      ops_files: 
      - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
      source_file: source-file/source-file.yml

- name: system-tests-internal-dbs
  serial: true
  plan:
  - in_parallel:
    - get: image-cryogenics-essentials
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk-on-airgapped-env
      - deploy-postgres
      - deploy-mysql
    - get: cert-store
      resource: gcp-db-certs-zip
    - get: cf-deployment-env-airgapped
      trigger: true
      passed:
      - deploy-database-sdk-on-airgapped-env
      - deploy-postgres
      - deploy-mysql
    - get: cryogenics-concourse-tasks
  - task: alias-env
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env-airgapped
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - task: postgres-system-tests-11
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-11-host
        TEST_SUITE_NAME: postgresql
        <<: *bosh-smiths-creds
        <<: *postgres_common
    - task: mysql-8-0-system-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false
        TEST_TLS_MUTUAL_TLS: false
        <<: *bosh-smiths-creds
        <<: *mysql_params_8
    - task: mysql-5-7-system-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false
        TEST_TLS_MUTUAL_TLS: false
        <<: *bosh-smiths-creds
        <<: *mysql_params_5_7

- name: unclaim-cf-deployment-airgapped
  plan:
  - get: cf-deployment-env-airgapped
    trigger: true
    passed:
    - system-tests-internal-dbs
  - put: cf-deployment-env-airgapped
    params:
      action: release
      resource: cf-deployment-env-airgapped

- name: claim-cf-deployment
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release
      trigger: true
      passed: [build-rc]
    - get: image-cryogenics-essentials
    - put: cf-deployment-env-non-airgapped
      attempts: *number_of_claim_retries
      timeout: 6h
      params:
        action: create
        duration: 24h
        resource: cf-deployment-env-non-airgapped
        timeout: 6h
  - task: update-cloud-config
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/update-cloud-config/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-non-airgapped

- name: deploy-database-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: image-cryogenics-essentials
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-non-airgapped
  - put: database-backup-restorer-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/database-backup-restorer.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: database-backup-restorer
        availability_zone: z1
        vm_extensions: ["cf-tcp-router-network-properties"]
      ops_files: 
      - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
      source_file: source-file/source-file.yml

- name: deploy-s3-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - claim-cf-deployment
    - get: image-cryogenics-essentials
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-non-airgapped
  - put: aws-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        availability_zone: z1
        s3-bucket-name: bbr-system-test-bucket
        s3-cloned-bucket-name: bbr-system-test-bucket-clone
        s3-region: *aws-region
        s3-cloned-bucket-region: *aws-backup-region
        s3-unversioned-bucket-name-for-versioned-backuper: bbr-system-test-bucket-unversioned
        s3-unversioned-bucket-region-for-versioned-backuper: *aws-region
        s3-unversioned-bucket-name: bbr-system-test-s3-unversioned-bucket
        s3-unversioned-bucket-region: *aws-region
        s3-unversioned-backup-bucket-name: bbr-system-test-s3-unversioned-backup-bucket
        s3-unversioned-backup-bucket-region: us-east-1
        minio-access-key: *minio_access_key
        minio-secret-key: *minio_secret_key
        s3-unversioned-bpm-bucket-name: sdk-system-test-unversioned-bpm
        s3-unversioned-bpm-bucket-region: *aws-region
        s3-unversioned-bpm-backup-bucket-name: sdk-system-test-unversioned-bpm-backup
        s3-unversioned-bpm-backup-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-bucket-name: sdk-large-number-of-files
        s3-unversioned-large-number-of-files-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-backup-bucket-name: sdk-large-number-of-files-backup
        s3-unversioned-large-number-of-files-backup-bucket-region: *aws-region
        s3-unversioned-clone-bucket-name: sdk-unversioned-clone
        s3-unversioned-clone-bucket-region: us-east-1
        <<: *aws-access
        vm_extensions: ["cf-tcp-router-network-properties"]
      ops_files: 
      - backup-and-restore-sdk-release/ci/manifests/ops-files/apply_vm_extension.yml
      source_file: source-file/source-file.yml

- name: deploy-azure-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: image-cryogenics-essentials
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - claim-cf-deployment
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-non-airgapped
  - put: azure-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/azure-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: azure-backuper
        azure-container-name: bbr-system-test-azure-container
        azure-storage-account: *azure_credentials_storage_account_1
        azure-storage-key: *azure_credentials_storage_key_1
        azure-different-storage-account: *azure_credentials_storage_account_2
        azure-different-storage-key: *azure_credentials_storage_key_2
        azure-different-container-name: bbr-system-test-azure-different-container
      source_file: source-file/source-file.yml

- name: deploy-gcs-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - claim-cf-deployment
    - get: release-tarball
      trigger: true
      resource: release
      passed:
      - claim-cf-deployment
    - get: jammy-stemcell
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - claim-cf-deployment
    - get: image-cryogenics-essentials
  - task: generate-bosh-deployment-source-file
    image: image-cryogenics-essentials
    file: backup-and-restore-sdk-release/ci/tasks/generate-bosh-deployment-source-file/task.yml
    input_mapping:
      cf-deployment-env: cf-deployment-env-non-airgapped
  - put: gcs-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/gcs-backuper.yml
      stemcells:
      - jammy-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: gcs-backuper
        gcp-service-account-key: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        gcs-bucket-name: bbr-system-test-bucket
        gcs-backup-bucket-name: bbr-system-test-backup-bucket
      source_file: source-file/source-file.yml

- name: system-tests-external-dbs-rds
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
    - get: cryogenics-concourse-tasks
    - get: cert-store
      resource: rds-ca-bundle
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - deploy-database-sdk
    - get: image-cryogenics-essentials
  - put: terraform
    params:
      terraform_source: backup-and-restore-sdk-release/ci/terraform/bbr-sdk-system-tests/aws/
      env_name: bbr-sdk-external-rds-dbs
      delete_on_failure: true
      vars:
        aws_region: *aws-region
        <<: *external_db_passwords
        <<: *aws_credentials_tf
    get_params:
      output_statefile: true
  - task: alias-env
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env-non-airgapped
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - task: postgres-tls-system-tests-15
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
      input_mapping:
        terraform-state: terraform
      params:
        <<: *bosh-smiths-creds
        DB_PREFIX: postgres_15
        DB_TYPE: postgres
        POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
        POSTGRES_PASSWORD: *postgres_15_password
        TEST_SSL_USER_REQUIRES_SSL: false
        TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-11
        image: image-cryogenics-essentials
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_PASSWORD: *postgres_11_password
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-11
        image: image-cryogenics-essentials
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: *postgres_11_password
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-13
        image: image-cryogenics-essentials
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_13
          DB_TYPE: postgres
          POSTGRES_PASSWORD: *postgres_13_password
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-13
        image: image-cryogenics-essentials
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: postgres_13
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: *postgres_13_password
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: maria-system-tests-10-6
        image: image-cryogenics-essentials
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-smiths-creds
          DB_PREFIX: mariadb_10_6
          DB_TYPE: mysql
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          MYSQL_PASSWORD: *mariadb_10_password
          TEST_SUITE_NAME: mysql
          TEST_TLS_MUTUAL_TLS: false
          TEST_TLS_VERIFY_IDENTITY: false

- name: system-tests-blobstore-backuper
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
      - deploy-s3-blobstore-sdk
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk
    - get: cf-deployment-env-non-airgapped
      trigger: true
      passed:
      - deploy-database-sdk
      - deploy-s3-blobstore-sdk
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - task: alias-env
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/toolsmiths/bosh-envify/task.yml
    input_mapping:
      cryogenics-tasks: cryogenics-concourse-tasks
      toolsmiths-env: cf-deployment-env-non-airgapped
  - load_var: pooled-env
    file: bosh-env/metadata.yml
  - in_parallel:
    - task: s3
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: s3
        BOSH_DEPLOYMENT: s3-backuper
        AWS_TEST_BUCKET_NAME: bbr-system-test-bucket
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: bbr-system-test-bucket-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-backup-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
        S3_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
        S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1
        S3_UNVERSIONED_BPM_BUCKET_NAME: sdk-system-test-unversioned-bpm
        S3_UNVERSIONED_BPM_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_NAME: sdk-system-test-unversioned-bpm-backup
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_NAME: sdk-large-number-of-files
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_NAME: sdk-large-number-of-files-backup
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_CLONE_BUCKET_NAME: sdk-unversioned-clone
        S3_UNVERSIONED_CLONE_BUCKET_REGION: us-east-1
        <<: *AWS_ACCESS
    - task: azure-system-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: azure
        BOSH_DEPLOYMENT: azure-backuper
        AZURE_STORAGE_ACCOUNT: *azure_credentials_storage_account_1
        AZURE_STORAGE_KEY: *azure_credentials_storage_key_1
        AZURE_CONTAINER_NAME: bbr-system-test-azure-container
        AZURE_DIFFERENT_STORAGE_ACCOUNT: *azure_credentials_storage_account_2
        AZURE_DIFFERENT_STORAGE_KEY: *azure_credentials_storage_key_2
        AZURE_DIFFERENT_CONTAINER_NAME: bbr-system-test-azure-different-container
    - task: gcs-blobstore-backuper-system-tests
      image: image-cryogenics-essentials
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      attempts: *number_of_test_retries
      params:
        <<: *bosh-smiths-creds
        TEST_SUITE_NAME: gcs
        GCP_SERVICE_ACCOUNT_KEY: *service_accounts_gcp_cf_backup_and_restore_owner_role_json_key
        GCP_PROJECT_NAME: cf-bosh-concourse
        GCS_BUCKET_NAME: bbr-system-test-bucket
        GCS_BACKUP_BUCKET_NAME: bbr-system-test-backup-bucket
        BOSH_DEPLOYMENT: gcs-backuper

- name: unclaim-cf-deployment
  plan:
  - get: cf-deployment-env-non-airgapped
    trigger: true
    passed:
    - system-tests-external-dbs-rds
    - system-tests-blobstore-backuper
  - put: cf-deployment-env-non-airgapped
    params:
      action: release
      resource: cf-deployment-env-non-airgapped

- name: merge-pr
  serial: true
  plan:
  - get: backup-and-restore-sdk-release
    trigger: true
    passed:
    - system-tests-internal-dbs
    - system-tests-external-dbs-rds
    - system-tests-blobstore-backuper
    - system-tests-blobstore-backuper-with-iam-instance-profile
  - put: backup-and-restore-sdk-release
    params:
      merge: true
      repository: backup-and-restore-sdk-release

# Release
- name: check-for-changes
  plan:
  - in_parallel:
    - get: every-week
      trigger: true
    - get: backup-and-restore-sdk-release-main
    - get: version

- name: create-final-patch
  serial: true
  serial_groups: [version]
  ensure:
    do:
    - put: version
      params:
        bump: patch
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
      passed: [check-for-changes]
      trigger: true
    - get: version
      passed: [check-for-changes]
      params: {bump: final}
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
  - task: create-final-release
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
    input_mapping:
      release-repo: backup-and-restore-sdk-release-main
    output_mapping:
      updated-release-repo: backup-and-restore-sdk-final-release
      updated-release-tarball: backup-and-restore-sdk-final-release-tarball
    params:
      GIT_USERNAME: Backup & Restore Concourse
      GIT_EMAIL: cf-lazarus@pivotal.io
      FINAL: true
      RELEASE_NAME: backup-and-restore-sdk
      <<: *AWS_ACCESS
  - task: create-release-notes
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
    input_mapping:
      git-repo: backup-and-restore-sdk-release-main
    params:
      USE_LATEST_PUBLISHED_TAG: true
  - task: format-release-notes
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
    input_mapping:
      template-folder: cryogenics-concourse-tasks
    params:
      TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
  - put: backup-and-restore-sdk-release-main
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - load_var: version-number
    file: version/number
  - load_var: github-release-url
    file: github-release/url
  - put: gchat-cryo-notification
    params:
      text: |
        *BBR SDK*: version `((.:version-number))` has been published!
        Next steps: Review the release notes <((.:github-release-url))|here>.
 
# Dependency bumps
- name: bump-golang
  serial: true
  plan:
  - in_parallel:
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: golang-release
      trigger: true
    - get: backup-and-restore-sdk-release-main
      params:
        branch: main
  - task: bump-golang
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-golang/task.yml
    input_mapping:
      release: backup-and-restore-sdk-release-main
      vendored-package-release: golang-release
    output_mapping:
      release-with-updated-vendored-package: backup-and-restore-sdk-release-updated
    params:
      VENDORED_PACKAGE_NAME: golang-1-linux
      VENDOR_UPDATES_BRANCH: golang-vendor-updates
      <<: *AWS_ACCESS
  - task: update-go-directive-in-system-tests
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    params:
      PATH_TO_GO_MODULE: src/system-tests
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-s3-blobstore-backup-restore
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    params:
      PATH_TO_GO_MODULE: src/s3-blobstore-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-database-backup-restore
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    params:
      PATH_TO_GO_MODULE: src/database-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - task: update-go-directive-in-azure-blobstore-backup-restore
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/tasks/bosh/update-go-directive/task.yml
    params:
      PATH_TO_GO_MODULE: src/azure-blobstore-backup-restore
    input_mapping:
      bosh-release-repo-with-vendored-golang: golang-release
      golang-project-repo: backup-and-restore-sdk-release-updated
    output_mapping:
      golang-project-repo: backup-and-restore-sdk-release-updated
  - load_var: golang-release-version
    file: golang-release/.git/describe_ref
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: backup-and-restore-sdk-release-updated
      branch: &golang-vendor-branch bump-golang-vendor-((.:golang-release-version))
      force: true
  - task: create-golang-vendor-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *golang-vendor-branch
      LABELS: ci,bump-golang
      TITLE: Bump golang-1-linux to version ((.:golang-release-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-ruby
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: ruby-version
      trigger: true
  - load_var: new-ruby-version
    file: ruby-version/version
  - task: bump-ruby
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-ruby/task.yml
    input_mapping:
      repo-to-bump: backup-and-restore-sdk-release-main
    params:
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      NEW_RUBY_VERSION: ((.:new-ruby-version))
  - put: backup-and-restore-sdk-release-write-only
    params:
      branch: &ruby-bump-branch bump-ruby-to-((.:new-ruby-version))
      force: true
      repository: bumped-repo
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *ruby-bump-branch
      LABELS: dependencies
      TITLE: Bump Ruby to ((.:new-ruby-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.
        I have detected a new version of Ruby and automatically bumped this package to benefit from the latest changes.
        If this does not look right, please reach out to the mapbu-cryogenics team.

- name: bump-mariadb
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: mariadb-10-6-blob
      trigger: true
  - load_var: mariadb-10-6-version
    file: mariadb-10-6-blob/version
  - task: bump-mariadb-10-6-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: mariadb-10-6-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-mariadb-10-6-branch bump-mariadb-10-6-to-((.:mariadb-10-6-version))
      BLOB_NAME: mariadb
      BLOB_EXTENSION: .tar.gz
      BLOB_DIRECTORY: mariadb/
      UPDATE_REFERENCES: only-variable-name:MARIADB_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-mariadb-10-6-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-mariadb-10-6-branch
      LABELS: ci,bump-mariadb
      TITLE: Bump mariadb-server to version ((.:mariadb-10-6-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [mariadb-10-6](https://mirror.mariadb.org/) and automatically bumped

        this package to benefit from the latest changes.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-ncurses
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: ncurses-blob
      trigger: true
  - load_var: ncurses-version
    file: ncurses-blob/version
    format: raw

  - task: bump-ncurses-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: ncurses-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-ncurses-branch bump-ncurses-to-((.:ncurses-version))
      BLOB_NAME: ncurses
      BLOB_EXTENSION: .tar.gz
      BLOB_DIRECTORY: ncurses/
      UPDATE_REFERENCES: only-variable-name:NCURSES_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-ncurses-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-ncurses-branch
      LABELS: ci,bump-ncurses
      TITLE: Bump ncurses-server to version ((.:ncurses-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [ncurses](https://ftp.gnu.org/pub/gnu/ncurses/) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-postgres-11
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: postgres-11-blob
      trigger: true
  - load_var: postgres-11-version
    file: postgres-11-blob/version
    format: raw
  - task: bump-postgres-11-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: postgres-11-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-postgres-11-branch bump-postgres-11-to-((.:postgres-11-version))
      BLOB_NAME: postgresql
      BLOB_EXTENSION: .tar.gz
      KEEP_BLOBS_FILTER: postgresql-13,postgresql-15
      BLOB_DIRECTORY: postgres/
      UPDATE_REFERENCES: only-variable-name:POSTGRES_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-postgres-11-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-postgres-11-branch
      LABELS: ci,bump-postgres
      TITLE: Bump postgres-11-server to version ((.:postgres-11-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [postgres-11](https://ftp.postgresql.org/pub/source/) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-postgres-13
  serial: true
  old_name: bump-postgres-13
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: postgres-13-blob
      trigger: true
  - load_var: postgres-13-version
    file: postgres-13-blob/version
    format: raw
  - task: bump-postgres-13-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: postgres-13-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-postgres-13-branch bump-postgres-13-to-((.:postgres-13-version))
      BLOB_NAME: postgresql
      BLOB_EXTENSION: .tar.gz
      KEEP_BLOBS_FILTER: postgresql-11,postgresql-15
      BLOB_DIRECTORY: postgres/
      UPDATE_REFERENCES: only-variable-name:POSTGRES13_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-postgres-13-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-postgres-13-branch
      LABELS: ci,bump-postgres
      TITLE: Bump postgres-13-server to version ((.:postgres-13-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [postgres-13](https://ftp.postgresql.org/pub/source/) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-postgres-15
  old_name: bump-postgres-15
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: postgres-15-blob
      trigger: true
  - load_var: postgres-15-version
    file: postgres-15-blob/version
    format: raw
  - task: bump-postgres-15-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: postgres-15-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-postgres-15-branch bump-postgres-15-to-((.:postgres-15-version))
      BLOB_NAME: postgresql
      BLOB_EXTENSION: .tar.gz
      KEEP_BLOBS_FILTER: postgresql-11,postgresql-13
      BLOB_DIRECTORY: postgres/
      UPDATE_REFERENCES: only-variable-name:POSTGRES15_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-postgres-15-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-postgres-15-branch
      LABELS: ci,bump-postgres
      TITLE: Bump postgres-15-server to version ((.:postgres-15-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [postgres-15](https://ftp.postgresql.org/pub/source/) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-libpcre2
  serial: true
  old_name: bump-libpcre2
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: libpcre2-blob
      trigger: true
  - load_var: libpcre2-version
    file: libpcre2-blob/version
    format: raw
  - task: bump-libpcre2-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: libpcre2-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-libpcre2-branch bump-libpcre2-to-((.:libpcre2-version))
      BLOB_NAME: pcre2
      BLOB_EXTENSION: .tar.gz
      BLOB_DIRECTORY: libpcre2/
      UPDATE_REFERENCES: only-variable-name:LIBPCRE2_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-libpcre2-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-libpcre2-branch
      LABELS: ci,bump-libpcre2
      TITLE: Bump libpcre2-server to version ((.:libpcre2-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.
        I have detected a new version of [libpcre2](https://github.com/PCRE2Project/pcre2/releases) and automatically bumped
        this package to benefit from the latest changes.
        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only

- name: bump-mysql-8
  serial: true
  old_name: bump-mysql
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: image-cryogenics-essentials
    - get: mysql-server-8-blob
      trigger: true
  - load_var: mysql-server-8-version
    file: mysql-server-8-blob/version
    format: raw

  - task: bump-mysql-8-blob
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/deps-automation/bump-blob/task.yml
    input_mapping:
      distributed-package: mysql-server-8-blob
      bosh-release: backup-and-restore-sdk-release-main
    params:
      <<: *AWS_ACCESS
      GIT_USERNAME: *github_user
      GIT_EMAIL: *github_email
      GIT_BRANCH: &bump-mysql-server-8-branch bump-mysql-server-8-to-((.:mysql-server-8-version))
      BLOB_NAME: mysql
      KEEP_BLOBS_FILTER: mysql-5
      BLOB_EXTENSION: linux-glibc2.17-x86_64-minimal.tar.xz
      BLOB_DIRECTORY: mysql/
      UPDATE_REFERENCES: only-variable-name:MYSQL80_VERSION
  - put: backup-and-restore-sdk-release-write-only
    params:
      repository: bosh-release-updated
      force: true
      branch: *bump-mysql-server-8-branch
  - task: create-pull-request
    image: image-cryogenics-essentials
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      GH_TOKEN: *git_token
      BASE: main
      BRANCH: *bump-mysql-server-8-branch
      LABELS: ci,bump-mysql
      TITLE: Bump mysql-server to version ((.:mysql-server-8-version))
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [mysql-8](https://dev.mysql.com/downloads/mysql/8.0.html) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the mapbu-cryogenics team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-write-only


- name: manual-bump-bbr-sdk-patch
  serial_groups:
  - bbr-sdk-version
  plan:
  - get: version
    resource: version
    params:
      bump: final
  - put: version
    params:
      bump: patch

- name: manual-bump-bbr-sdk-minor
  serial_groups:
  - bbr-sdk-version
  plan:
  - get: version
    resource: version
    params:
      bump: final
  - put: version
    params:
      bump: minor

- name: manual-bump-bbr-sdk-major
  serial_groups:
  - bbr-sdk-version
  plan:
  - get: version
    resource: version
    params:
      bump: final
  - put: version
    params:
      bump: major
