---
bosh-lite-creds: &bosh-lite-creds
  BOSH_ENVIRONMENT: ((infrastructure/bosh-lite-director.director_url))
  BOSH_CLIENT: ((infrastructure/bosh-lite-director.director_username))
  BOSH_CLIENT_SECRET: ((infrastructure/bosh-lite-director.director_password))
  BOSH_CA_CERT: ((infrastructure/bosh-lite-director.director_ca_cert))
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: ((infrastructure/bosh-lite-director.jumpbox_host))
  BOSH_GW_PRIVATE_KEY: ((infrastructure/bosh-lite-director.jumpbox_ssh_key))

aws-region: &aws-region eu-west-1
aws-backup-region: &aws-backup-region eu-central-1

mysql-deployment-name: &mysql-deployment-name mysql-dev
mysql-host: &mysql-host 10.244.1.9
mysql-port: &mysql-port 3306
mysql-username: &mysql-username root
mysql-password: &mysql-password mysql_password

postgres-9-4-deployment-name: &postgres-9-4-deployment-name postgres-9-4-dev
postgres-9-4-host: &postgres-9-4-host 10.244.1.10
postgres-9-4-port: &postgres-9-4-port 5432
postgres-9-4-username: &postgres-9-4-username test_user
postgres-9-4-password: &postgres-9-4-password postgres_password

postgres-9-6-deployment-name: &postgres-9-6-deployment-name postgres-9-6-dev
postgres-9-6-host: &postgres-9-6-host 10.244.1.11
postgres-9-6-port: &postgres-9-6-port 5432
postgres-9-6-username: &postgres-9-6-username test_user
postgres-9-6-password: &postgres-9-6-password postgres_password
postgres-9-6-ssl-username: &postgres-9-6-ssl-username ssl_user
postgres-9-6-ssl-password: &postgres-9-6-ssl-password postgres_password
postgres-9-6-tls-username: &postgres-9-6-tls-username mutual_tls_user
postgres-9-6-tls-common-name: &postgres-9-6-tls-common-name postgres96

postgres-10-deployment-name: &postgres-10-deployment-name postgres-10-dev
postgres-10-host: &postgres-10-host 10.244.1.12
postgres-10-port: &postgres-10-port 5432
postgres-10-username: &postgres-10-username test_user
postgres-10-password: &postgres-10-password postgres_password

postgres-11-deployment-name: &postgres-11-deployment-name postgres-11-dev
postgres-11-host: &postgres-11-host 10.244.1.13
postgres-11-port: &postgres-11-port 5432
postgres-11-username: &postgres-11-username test_user
postgres-11-password: &postgres-11-password postgres_password

postgres-13-deployment-name: &postgres-13-deployment-name postgres-13-dev
postgres-13-host: &postgres-13-host 10.244.1.14
postgres-13-port: &postgres-13-port 5432
postgres-13-username: &postgres-13-username test_user
postgres-13-password: &postgres-13-password postgres_password

gcp-mysql-5-7-ca-cert-path: &gcp-mysql-5-7-ca-cert-path "gcp-mysql_5_7-test-server-cert.pem"
gcp-mysql-5-7-client-cert-path: &gcp-mysql-5-7-client-cert-path "gcp-mysql_5_7-test-client-cert.pem"
gcp-mysql-5-7-client-key-path: &gcp-mysql-5-7-client-key-path "gcp-mysql_5_7-test-client-key.pem"
gcp-postgres-9-6-ca-cert-path: &gcp-postgres-9-6-ca-cert-path "gcp-postgres_9_6-test-server-cert.pem"
gcp-postgres-9-6-mutual-tls-ca-cert-path: &gcp-postgres-9-6-mutual-tls-ca-cert-path "gcp-postgres_9_6_mutual_tls-test-server-cert.pem"
gcp-postgres-9-6-mutual-tls-client-cert-path: &gcp-postgres-9-6-mutual-tls-client-cert-path "gcp-postgres_9_6_mutual_tls-test-client-cert.pem"
gcp-postgres-9-6-mutual-tls-client-key-path: &gcp-postgres-9-6-mutual-tls-client-key-path "gcp-postgres_9_6_mutual_tls-test-client-key.pem"

vault_creds: &vault_creds
  url: ((vault/server.url))
  role_id: ((vault/resource_credentials.role_id))
  secret_id: ((vault/resource_credentials.secret_id))

groups:
- name: pr-test-and-merge
  jobs:
  - unit-tests
  - system-tests-internal-dbs
  - system-tests-external-dbs-gcp
  - system-tests-external-dbs-rds
  - system-tests-blobstore-backuper
  - contract-tests
  - merge-pr
  - build-rc
  - deploy-s3-blobstore-sdk
  - deploy-database-sdk
  - deploy-mariadb
  - deploy-postgres
  - deploy-gcs-blobstore-sdk
  - deploy-s3-blobstore-sdk-with-iam-instance-profile
  - deploy-azure-blobstore-sdk
  - deploy-rc-finished
- name: dependencies
  jobs:
  - bump-golang
  - bump-mariadb
  - bump-mysql
  - bump-postgresql
  - bump-boost
  - bump-libpcre2
- name: shipit
  jobs:
  - force-a-new-release
  - check-for-changes
  - create-final-patch

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: bosh-io-stemcell
  type: docker-image
  source:
    repository: concourse/bosh-io-stemcell-resource

- name: custom-terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.14.2

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: vault
  type: docker-image
  source:
    repository: wfernandes/vault-resource
    tag: latest

- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

- name: gitgat
  type: docker-image
  source:
    repository: cryogenics/concourse-gitgat-resource
    tag: latest

- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource

resources:
- name: rds-ca-bundle
  type: file-url
  icon: web-box
  source:
    url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
    filename: rds-combined-ca-bundle.pem

- name: terraform
  type: custom-terraform
  icon: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-terraform-states
      prefix: bbr-sdk-pr-tests
      credentials: ((gcp/service_accounts/bucket_owner.json_key))

- name: backup-and-restore-sdk-release
  type: pull-request
  check_every: 1m
  icon: source-pull
  source:
    repository: &repo cloudfoundry/backup-and-restore-sdk-release
    base_branch: main
    disable_forks: true
    access_token: ((github.access_token))

- name: version
  type: semver
  icon: tag
  source:
    bucket: backup-and-restore-sdk-releases
    region_name: *aws-region
    key: current-dev-version
    access_key_id: ((aws_credentials.access_key_id))
    secret_access_key: ((aws_credentials.secret_access_key))

- name: release
  type: s3
  icon: database
  source:
    bucket: backup-and-restore-sdk-releases
    regexp: backup-and-restore-sdk-(.*).tgz
    region_name: *aws-region
    access_key_id: ((aws_credentials.access_key_id))
    secret_access_key: ((aws_credentials.secret_access_key))

- name: gcp-db-certs
  type: vault
  icon: lock
  source:
    <<: *vault_creds
    path: /concourse/bosh-backup-restore/gcp-db-certs

- name: github-sdk-key
  type: vault
  icon: lock
  source:
    <<: *vault_creds
    path: /concourse/bosh-backup-restore/github-sdk

- name: slack-cryo-notification
  type: slack-notification
  icon: bell-ring
  source:
    url: ((slack.webhook))

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

- name: backup-and-restore-sdk-release-main
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/backup-and-restore-sdk-release.git
    private_key: ((github.ssh_key))
    branch: main
    disable_ci_skip: true

- name: every-2-weeks
  type: time
  source: 
    interval: 20160m # 60*24*7*2

- name: github-release
  type: github-release
  icon: rocket
  source:
    user: cloudfoundry
    repository: backup-and-restore-sdk-release
    drafts: true
    access_token: ((github.access_token))

- name: golang-release
  type: git
  icon: tag
  source:
    uri: https://github.com/bosh-packages/golang-release.git
    tag_filter: v*

- name: six-hours
  type: time
  icon: timer-outline
  source:
    interval: 6h
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: daily-trigger
  type: time
  source:
    days: [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday' ]

- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-xenial-go_agent
- name: xenial-stemcell-aws
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-xenial-go_agent
- name: bbl-state-bosh-lite
  type: vault
  source:
    <<: *vault_creds
    path: /concourse/common/infrastructure/bosh/maru-lite
    tarball: true
- name: mysql-dev-deployment
  type: bosh-deployment
  source:
    deployment: *mysql-deployment-name
    skip_check: true
- name: postgres-9-4-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-9-4-deployment-name
    skip_check: true
- name: postgres-9-6-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-9-6-deployment-name
    skip_check: true

- name: postgres-10-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-10-deployment-name
    skip_check: true

- name: postgres-11-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-11-deployment-name
    skip_check: true

- name: postgres-13-dev-deployment
  type: bosh-deployment
  source:
    deployment: *postgres-13-deployment-name
    skip_check: true
- name: aws-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true
- name: azure-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: azure-backuper
    skip_check: true
- name: bbl-state-director-with-iam-profile
  type: vault
  source:
    <<: *vault_creds
    path: /concourse/common/infrastructure/bosh/aws-ec2
    tarball: true
- name: s3-backuper-with-iam-instance-profile-deployment
  type: bosh-deployment
  source:
    deployment: s3-backuper
    skip_check: true
- name: database-backup-restorer-deployment
  type: bosh-deployment
  source:
    deployment: database-backup-restorer
    skip_check: true
- name: gcs-blobstore-sdk-deployment
  type: bosh-deployment
  source:
    deployment: gcs-backuper
    skip_check: true

jobs:
- name: unit-tests
  serial: true
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
    - get: github-sdk-key
    - get: cryogenics-concourse-tasks
    - get: six-hours
      trigger: true
  - in_parallel:
    - task: sdk-template-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-template-unit-tests/task.yml
    - task: databases-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/database-unit-tests/task.yml
      privileged: true
    - task: s3-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage s3bucket
    - task: azure-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage contract_test
    - task: gcs-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage contract_test

- name: deploy-rc-finished
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed:
      - deploy-database-sdk
      - deploy-postgres
      - deploy-mariadb
      - deploy-s3-blobstore-sdk
      - deploy-s3-blobstore-sdk-with-iam-instance-profile
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk
    - get: backup-and-restore-sdk-release
      passed:
      - deploy-database-sdk
      - deploy-postgres
      - deploy-mariadb
      - deploy-s3-blobstore-sdk
      - deploy-s3-blobstore-sdk-with-iam-instance-profile
      - deploy-azure-blobstore-sdk
      - deploy-gcs-blobstore-sdk

- name: contract-tests
  serial: true
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed: [deploy-rc-finished]
    - get: backup-and-restore-sdk-release
      passed: [deploy-rc-finished]
  - in_parallel:
    - task: aws-s3-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore/s3bucket
        S3_LIVE_REGION: *aws-region
        S3_BACKUP_REGION: *aws-backup-region
        S3_ENDPOINT: ""
        S3_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        S3_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        S3_BIG_FILE_BUCKET: "large-blob-test-bucket-unversioned"
    - task: gcs-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore/contract_test
        GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner_role.json_key))
        GCP_PROJECT_NAME: cf-backup-and-restore
    - task: azure-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore/contract_test
        AZURE_STORAGE_ACCOUNT: ((azure_credentials.storage_account_1))
        AZURE_STORAGE_KEY: ((azure_credentials.storage_key_1))
        AZURE_STORAGE_ACCOUNT_NO_SOFT_DELETE: ((azure_credentials.storage_account_no_soft_delete))
        AZURE_STORAGE_KEY_NO_SOFT_DELETE: ((azure_credentials.storage_key_no_soft_delete))
        AZURE_DIFFERENT_STORAGE_ACCOUNT: ((azure_credentials.storage_account_2))
        AZURE_DIFFERENT_STORAGE_KEY: ((azure_credentials.storage_key_2))
        AZURE_CONTAINER_NAME_MANY_FILES: bbr-test-many-blobs-azure-container

- name: system-tests-external-dbs-gcp
  serial: true
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed: [deploy-rc-finished]
    - get: backup-and-restore-sdk-release
      passed: [deploy-rc-finished]
    - get: cryogenics-concourse-tasks
    - get: gcp-db-certs
  - in_parallel:
    - do:
      - put: gcp-terraform
        resource: terraform
        params:
          terraform_source: cryogenics-concourse-tasks/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/gcp
          env_name: bbr-sdk-external-gcp-dbs
          delete_on_failure: true
          vars:
            director-external-ip: ((infrastructure/bosh-lite-director.director_external_ip))
            director-jumpbox-ip: ((infrastructure/bosh-lite-director.jumpbox_host))
            gcp-key: ((gcp/service_accounts/owner.json_key))
            mysql-5-7-password: ((backup-and-restore-sdk-release.gcp_mysql_5_7_password))
            postgres-9-6-password: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
        get_params:
          output_statefile: true
      - task: create-gcp-db-certs
        file: backup-and-restore-sdk-release/ci/tasks/create-gcp-db-certs/task.yml
        input_mapping:
          terraform-state: gcp-terraform
        params:
          GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner.json_key))
          PROJECT_NAME: mapbu-cryogenics
        ensure:
          put: gcp-db-certs
          params:
            data: gcp-db-certs
  - in_parallel:
    - do: # postgres gcp system tests
      - task: postgres-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          TEST_SUITE_NAME: postgresql
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
      - task: postgres-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: *gcp-postgres-9-6-ca-cert-path
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
          TEST_TLS_VERIFY_IDENTITY: false
      - task: postgres-mutual-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6_mutual_tls
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: *gcp-postgres-9-6-mutual-tls-ca-cert-path
          POSTGRES_CLIENT_CERT_PATH: *gcp-postgres-9-6-mutual-tls-client-cert-path
          POSTGRES_CLIENT_KEY_PATH: *gcp-postgres-9-6-mutual-tls-client-key-path
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_mutual_tls
          TEST_TLS_VERIFY_IDENTITY: false
    - task: mysql-system-tests-5.7
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
      input_mapping:
        terraform-state: gcp-terraform
        cert-store: gcp-db-certs
      params:
        DB_PREFIX: mysql_5_7
        DB_TYPE: mysql
        MYSQL_CA_CERT_PATH: *gcp-mysql-5-7-ca-cert-path
        MYSQL_CLIENT_CERT_PATH: *gcp-mysql-5-7-client-cert-path
        MYSQL_CLIENT_KEY_PATH: *gcp-mysql-5-7-client-key-path
        MYSQL_PASSWORD: ((backup-and-restore-sdk-release.gcp_mysql_5_7_password))
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false

- name: system-tests-external-dbs-rds
  serial: true
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed: [deploy-rc-finished]
    - get: backup-and-restore-sdk-release
      passed: [deploy-rc-finished]
    - get: cryogenics-concourse-tasks
    - get: cert-store
      resource: rds-ca-bundle
  - in_parallel:
    - put: terraform
      params:
        terraform_source: cryogenics-concourse-tasks/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/aws/
        env_name: bbr-sdk-external-rds-dbs
        delete_on_failure: true
        vars:
          aws_access_key: ((aws_credentials.access_key_id))
          aws_secret_key: ((aws_credentials.secret_access_key))
          aws_region: *aws-region
          mysql_5_7_password: ((backup-and-restore-sdk-release.rds_5_7_password))
          postgres_9_6_password: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          postgres_10_password: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          postgres_11_password: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          postgres_13_password: ((backup-and-restore-sdk-release.rds_postgres_13_password))
          mariadb_10_password: ((backup-and-restore-sdk-release.rds_mariadb_10_password))
      get_params:
        output_statefile: true
  - in_parallel:
    - do:
      - task: postgres-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: maria-system-tests-10-2
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: mariadb_10_2
          DB_TYPE: mysql
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          MYSQL_PASSWORD: ((backup-and-restore-sdk-release.rds_mariadb_10_password))
          TEST_SUITE_NAME: mysql
          TEST_TLS_MUTUAL_TLS: false
          TEST_TLS_VERIFY_IDENTITY: false
    - do:
      - task: mysql-system-tests-5.7
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-lite-creds
          TEST_SUITE_NAME: mysql
          MYSQL_PASSWORD: ((backup-and-restore-sdk-release.rds_5_7_password))
          MYSQL_PORT: 3306
          MYSQL_USERNAME: root
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          TEST_TLS_MUTUAL_TLS: false
          DB_TYPE: mysql
          DB_PREFIX: mysql_5_7

- name: system-tests-internal-dbs
  serial: true
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed: [deploy-rc-finished]
    - get: backup-and-restore-sdk-release
      passed: [deploy-rc-finished]
    - get: cert-store
      resource: gcp-db-certs
  - in_parallel:
    - task: postgres-system-tests-9.4
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-9-4-host
        POSTGRES_PASSWORD: *postgres-9-4-password
        POSTGRES_PORT: *postgres-9-4-port
        POSTGRES_USERNAME: *postgres-9-4-username
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-9.6
      attempts: 4
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-9-6-host
        POSTGRES_PASSWORD: postgres_password
        POSTGRES_USERNAME: test_user
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-10
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-10-host
        POSTGRES_PASSWORD: *postgres-10-password
        POSTGRES_PORT: *postgres-10-port
        POSTGRES_USERNAME: *postgres-10-username
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-11
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-11-host
        POSTGRES_PASSWORD: *postgres-11-password
        POSTGRES_PORT: *postgres-11-port
        POSTGRES_USERNAME: *postgres-11-username
        TEST_SUITE_NAME: postgresql
  - task: postgres-tls-system-tests-9.6
    attempts: 4
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      POSTGRES_CA_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_ca_cert))
      POSTGRES_HOSTNAME: *postgres-9-6-host
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USERNAME: ssl_user
      TEST_SUITE_NAME: postgresql_tls
      TEST_TLS_VERIFY_IDENTITY: false
  - task: postgres-mutual-tls-system-tests-9.6
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      POSTGRES_CA_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_ca_cert))
      POSTGRES_CLIENT_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_cert))
      POSTGRES_CLIENT_KEY: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_key))
      POSTGRES_HOSTNAME: *postgres-9-6-host
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USERNAME: mutual_tls_user
      TEST_SUITE_NAME: postgresql_mutual_tls
      TEST_TLS_VERIFY_IDENTITY: false
  - task: mariadb-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      TEST_SUITE_NAME: mysql
      MYSQL_HOSTNAME: *mysql-host
      MYSQL_PORT: *mysql-port
      MYSQL_USERNAME: *mysql-username
      MYSQL_PASSWORD: *mysql-password
      MYSQL_CA_CERT: ((backup-and-restore-sdk-release-db-certs.mysql_ca_cert))
      MYSQL_CLIENT_CERT: ((backup-and-restore-sdk-release-db-certs.mysql_client_cert))
      MYSQL_CLIENT_KEY: ((backup-and-restore-sdk-release-db-certs.mysql_client_key))
      TEST_TLS_VERIFY_IDENTITY: false
      TEST_TLS_MUTUAL_TLS: false

- name: system-tests-blobstore-backuper
  serial: true
  plan:
  - in_parallel:
    - get: release
      trigger: true
      passed: [deploy-rc-finished]
    - get: backup-and-restore-sdk-release
      passed: [deploy-rc-finished]
  - in_parallel:
    - task: s3
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: s3
        BOSH_DEPLOYMENT: s3-backuper
        AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        AWS_TEST_BUCKET_NAME: bbr-system-test-bucket
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: bbr-system-test-bucket-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-backup-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
        S3_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
        S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1
        S3_UNVERSIONED_BPM_BUCKET_NAME: sdk-system-test-unversioned-bpm
        S3_UNVERSIONED_BPM_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_NAME: sdk-system-test-unversioned-bpm-backup
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_NAME: sdk-large-number-of-files
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_NAME: sdk-large-number-of-files-backup
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_CLONE_BUCKET_NAME: sdk-unversioned-clone
        S3_UNVERSIONED_CLONE_BUCKET_REGION: us-east-1
    - task: s3-with-iam-instance-profile
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        TEST_SUITE_NAME: s3
        FOCUS_SPEC: backs up and restores in-place # focus on one it to avoid redundant testing
        BOSH_ENVIRONMENT: "((infrastructure/director-with-iam-profile.director_url))"
        BOSH_CLIENT_SECRET: "((infrastructure/director-with-iam-profile.director_password))"
        BOSH_CLIENT: "((infrastructure/director-with-iam-profile.director_username))"
        BOSH_DEPLOYMENT: s3-backuper
        BOSH_CA_CERT: "((infrastructure/director-with-iam-profile.director_ca_cert))"
        BOSH_GW_USER: jumpbox
        BOSH_GW_HOST: "((infrastructure/director-with-iam-profile.jumpbox_host))"
        BOSH_GW_PRIVATE_KEY: "((infrastructure/director-with-iam-profile.jumpbox_ssh_key))"
        AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        AWS_TEST_BUCKET_NAME: iam-instance-role-test
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: iam-instance-role-test-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
    - task: azure-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: azure
        BOSH_DEPLOYMENT: azure-backuper
        AZURE_STORAGE_ACCOUNT: ((azure_credentials.storage_account_1))
        AZURE_STORAGE_KEY: ((azure_credentials.storage_key_1))
        AZURE_CONTAINER_NAME: bbr-system-test-azure-container
        AZURE_DIFFERENT_STORAGE_ACCOUNT: ((azure_credentials.storage_account_2))
        AZURE_DIFFERENT_STORAGE_KEY: ((azure_credentials.storage_key_2))
        AZURE_DIFFERENT_CONTAINER_NAME: bbr-system-test-azure-different-container
    - task: gcs-blobstore-backuper-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: gcs
        GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner_role.json_key))
        GCP_PROJECT_NAME: cf-backup-and-restore
        GCS_BUCKET_NAME: bbr-system-test-gcs-bucket
        GCS_BACKUP_BUCKET_NAME: bbr-system-test-gcs-backup-bucket
        GCS_CLONE_BUCKET_NAME: bbr-system-test-gcs-clone-bucket
        BOSH_DEPLOYMENT: gcs-backuper

- name: merge-pr
  serial: true
  plan:
  - get: cryogenics-concourse-tasks
  - get: backup-and-restore-sdk-release
    trigger: true
    passed:
    - contract-tests
    - system-tests-internal-dbs
    - system-tests-external-dbs-gcp
    - system-tests-external-dbs-rds
    - system-tests-blobstore-backuper
  - put: backup-and-restore-sdk-release
    params:
      merge: true
      repository: backup-and-restore-sdk-release

- name: build-rc
  serial: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [unit-tests]
      trigger: true
    - get: version
      params: {pre: rc}
  - task: create-dev-release
    file: backup-and-restore-sdk-release/ci/tasks/create-dev-release/task.yml
    input_mapping:
      backup-and-restore-sdk-release: backup-and-restore-sdk-release
    params:
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
  - put: release
    params:
      file: backup-and-restore-sdk-release-build/backup-and-restore-sdk-*.tgz
  - put: version
    params: {file: version/number}

- name: force-a-new-release
  plan:
  - put: every-2-weeks

- name: check-for-changes
  plan:
  - in_parallel:
    - get: force-a-new-release
      resource: every-2-weeks
      passed: [force-a-new-release]
      trigger: true
    - get: every-2-weeks
      trigger: true
    - get: backup-and-restore-sdk-release-main
    - get: version

- name: create-final-patch
  serial: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
      passed: [check-for-changes]
      trigger: true
    - get: version
      passed: [check-for-changes]
      params: {bump: final}
    - get: cryogenics-concourse-tasks
  - task: create-final-release
    file: cryogenics-concourse-tasks/bosh-tasks/create-release/task.yml
    input_mapping:
      release-repo: backup-and-restore-sdk-release-main
    output_mapping:
      updated-release-repo: backup-and-restore-sdk-final-release
      updated-release-tarball: backup-and-restore-sdk-final-release-tarball
    params:
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
      GIT_USERNAME: Backup & Restore Concourse
      GIT_EMAIL: cf-lazarus@pivotal.io
      FINAL: true
      RELEASE_NAME: backup-and-restore-sdk
  - task: create-release-notes
    file: cryogenics-concourse-tasks/release-automation/release-notes/task.yml
    input_mapping:
      git-repo: backup-and-restore-sdk-release-main
    params:
      USE_LATEST_PUBLISHED_TAG: true
  - task: format-release-notes
    file: cryogenics-concourse-tasks/release-automation/format-release-notes/task.yml
    input_mapping:
      template-folder: cryogenics-concourse-tasks
    params:
      TEMPLATE_PATH: release-automation/release-notes-templates/release-notes-auto.md.erb
  - put: backup-and-restore-sdk-release-main
    params:
      repository: backup-and-restore-sdk-final-release
      merge: true
      tag: version/number
      tag_prefix: v
  - put: github-release
    params:
      name: version/number
      tag: version/number
      body: release-notes/release-notes.md
      tag_prefix: v
      globs:
      - backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - put: release
    params:
      file: backup-and-restore-sdk-final-release-tarball/backup-and-restore-sdk-*.tgz
  - load_var: version-tag
    file: version/number
  - load_var: github-release-url
    file: github-release/url
  - put: slack-cryo-notification
    params:
      text: |
        A new release for $BUILD_PIPELINE_NAME has been published!
        Release `((.:version-tag))` is now available <((.:github-release-url))|here>
        View the pipeline <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|here>
  - put: version
    params:
      bump: patch

# Dependency bumps
- name: bump-golang
  plan:
  - in_parallel:
    - get: cryogenics-concourse-tasks
    - get: golang-release
      trigger: true
    - get: backup-and-restore-sdk-release-main
  - task: bosh-vendor-package
    file: cryogenics-concourse-tasks/deps-automation/bosh-vendor-package/task.yml
    input_mapping:
      release: backup-and-restore-sdk-release-main
      vendored-package-release: golang-release
    params:
      VENDORED_PACKAGE_NAME: golang-1-linux
      VENDOR_UPDATES_BRANCH: golang-vendor-updates
      COMMIT_USERNAME: bump-golang CI job
      COMMIT_USEREMAIL: mapbu-cryogenics@groups.vmware.com
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
  - put: backup-and-restore-sdk-release-main
    params:
      repository: release-with-updated-vendored-package
      branch: golang-vendor-updates
      force: true
  - task: create-golang-vendor-pull-request
    file: cryogenics-concourse-tasks/github-automation/create-pr/task.yml
    params:
      BASE: main
      BRANCH: golang-vendor-updates
      LABELS: ci,bump-golang
      TITLE: Update vendored package golang-1-linux
      MESSAGE: |
        This is an automatically generated Pull Request from the Cryogenics CI Bot.

        I have detected a new version of [golang-release](https://github.com/bosh-packages/golang-release) and automatically bumped
        this package to benefit from the latest changes.

        If this does not look right, please reach out to the [#mapbu-cryogenics](https://vmware.slack.com/archives/C01DXEYRKRU) team.
    input_mapping:
      source-repo: backup-and-restore-sdk-release-main

- name: bump-mariadb
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: daily-trigger
      trigger: true

  - task: bump-mariadb
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-mariadb.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: ((github.access_token))
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))

- name: bump-mysql
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: daily-trigger
      trigger: true

  - task: bump-mysql
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-mysql.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: ((github.access_token))
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))

- name: bump-postgresql
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: daily-trigger
      trigger: true

  - task: bump-postgresql
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-postgresql.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: ((github.access_token))
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))

- name: bump-boost
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: daily-trigger
      trigger: true

  - task: bump-boost
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-boost.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: ((github.access_token))
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))

- name: bump-libpcre2
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release-main
    - get: cryogenics-concourse-tasks
    - get: daily-trigger
      trigger: true

  - task: bump-libpcre2
    file: cryogenics-concourse-tasks/deps-automation/bump-package/task.yml
    input_mapping:
      task-repo: cryogenics-concourse-tasks
      bump-repo: backup-and-restore-sdk-release-main
    vars:
      bump-script: scripts/autobump-libpcre2.sh
    params:
      PR_BASE: main
      PR_LABELS: ci

      GH_TOKEN: ((github.access_token))
      AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))

- name: deploy-database-sdk
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: bbl-state-bosh-lite
    - get: xenial-stemcell
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - put: database-backup-restorer-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/database-backup-restorer.yml
      stemcells:
      - xenial-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: database-backup-restorer
        availability_zone: z1
      source_file: source-file/source-file.yml
- name: deploy-postgres
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      resource: release
      trigger: true
      passed: [build-rc]
    - get: xenial-stemcell
    - get: bbl-state-bosh-lite
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - in_parallel:
    - put: postgres-9-4-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-9.4.yml
        stemcells:
        - xenial-stemcell/*.tgz
        vars:
          deployment-name: *postgres-9-4-deployment-name
          db_username: *postgres-9-4-username
          db_password: *postgres-9-4-password
          db_host: *postgres-9-4-host
          availability_zone: z1
        source_file: source-file/source-file.yml
    - put: postgres-9-6-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-9.6.yml
        vars:
          deployment-name: *postgres-9-6-deployment-name
          db_username: *postgres-9-6-username
          db_password: *postgres-9-6-password
          ssl_username: *postgres-9-6-ssl-username
          ssl_password: *postgres-9-6-ssl-password
          tls_username: *postgres-9-6-tls-username
          tls_common_name: *postgres-9-6-tls-common-name
          db_host: *postgres-9-6-host
          db_port: *postgres-9-6-port
          availability_zone: z1
          databases.ca: ((backup-and-restore-sdk-release-db-certs.postgres_96_ca_cert))
          databases.certificate: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_cert))
          databases.private_key: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_key))
        source_file: source-file/source-file.yml
    - put: postgres-10-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-10.yml
        stemcells:
        - xenial-stemcell/*.tgz
        vars:
          deployment-name: *postgres-10-deployment-name
          db_username: *postgres-10-username
          db_password: *postgres-10-password
          db_host: *postgres-10-host
          availability_zone: z1
        source_file: source-file/source-file.yml
    - put: postgres-11-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-11.yml
        stemcells:
        - xenial-stemcell/*.tgz
        vars:
          deployment-name: *postgres-11-deployment-name
          db_username: *postgres-11-username
          db_password: *postgres-11-password
          db_host: *postgres-11-host
          availability_zone: z1
        source_file: source-file/source-file.yml
    - put: postgres-13-dev-deployment
      params:
        manifest: backup-and-restore-sdk-release/ci/manifests/postgres-13.yml
        stemcells:
        - xenial-stemcell/*.tgz
        vars:
          deployment-name: *postgres-13-deployment-name
          db_username: *postgres-13-username
          db_password: *postgres-13-password
          db_host: *postgres-13-host
          availability_zone: z1
        source_file: source-file/source-file.yml
  - task: create-ssl-user
    file: backup-and-restore-sdk-release/ci/tasks/create-ssl-user/task.yml
    params:
      <<: *bosh-lite-creds
      BOSH_DEPLOYMENT: *postgres-9-6-deployment-name

- name: deploy-mariadb
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: xenial-stemcell
    - get: bbl-state-bosh-lite
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - put: mysql-dev-deployment
    attempts: 3
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/mysql.yml
      stemcells:
      - xenial-stemcell/*.tgz
      vars:
        deployment-name: *mysql-deployment-name
        db_password: *mysql-password
        db_host: *mysql-host
        availability_zone: z1
        databases.ca: ((backup-and-restore-sdk-release-db-certs.mysql_ca_cert))
        databases.certificate: ((backup-and-restore-sdk-release-db-certs.mysql_client_cert))
        databases.private_key: ((backup-and-restore-sdk-release-db-certs.mysql_client_key))
      source_file: source-file/source-file.yml

- name: deploy-s3-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: xenial-stemcell
    - get: bbl-state-bosh-lite
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - put: aws-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper.yml
      stemcells:
      - xenial-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        availability_zone: z1
        aws-access-key-id: ((aws_credentials.access_key_id))
        aws-secret-access-key: ((aws_credentials.secret_access_key))
        s3-bucket-name: bbr-system-test-bucket
        s3-cloned-bucket-name: bbr-system-test-bucket-clone
        s3-region: *aws-region
        s3-cloned-bucket-region: *aws-backup-region
        s3-unversioned-bucket-name-for-versioned-backuper: bbr-system-test-bucket-unversioned
        s3-unversioned-bucket-region-for-versioned-backuper: *aws-region
        s3-unversioned-bucket-name: bbr-system-test-s3-unversioned-bucket
        s3-unversioned-bucket-region: *aws-region
        s3-unversioned-backup-bucket-name: bbr-system-test-s3-unversioned-backup-bucket
        s3-unversioned-backup-bucket-region: us-east-1
        minio-access-key: ((backup-and-restore-sdk-release.minio_access_key))
        minio-secret-key: ((backup-and-restore-sdk-release.minio_secret_key))
        s3-unversioned-bpm-bucket-name: sdk-system-test-unversioned-bpm
        s3-unversioned-bpm-bucket-region: *aws-region
        s3-unversioned-bpm-backup-bucket-name: sdk-system-test-unversioned-bpm-backup
        s3-unversioned-bpm-backup-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-bucket-name: sdk-large-number-of-files
        s3-unversioned-large-number-of-files-bucket-region: *aws-region
        s3-unversioned-large-number-of-files-backup-bucket-name: sdk-large-number-of-files-backup
        s3-unversioned-large-number-of-files-backup-bucket-region: *aws-region
        s3-unversioned-clone-bucket-name: sdk-unversioned-clone
        s3-unversioned-clone-bucket-region: us-east-1
      source_file: source-file/source-file.yml

- name: deploy-s3-blobstore-sdk-with-iam-instance-profile
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: xenial-stemcell-aws
    - get: bbl-state-director-with-iam-profile
      trigger: true
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    input_mapping:
      bbl-state-bosh-lite: bbl-state-director-with-iam-profile
    params:
      BBL_STATE: .
  - put: s3-backuper-with-iam-instance-profile-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/s3-backuper-with-iam-instance-profile.yml
      stemcells:
      - xenial-stemcell-aws/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: s3-backuper
        s3-bucket-name: iam-instance-role-test
        s3-region: *aws-region
      source_file: source-file/source-file.yml

- name: deploy-azure-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: xenial-stemcell
    - get: bbl-state-bosh-lite
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - put: azure-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/azure-backuper.yml
      stemcells:
      - xenial-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: azure-backuper
        azure-container-name: bbr-system-test-azure-container
        azure-storage-account: ((azure_credentials.storage_account_1))
        azure-storage-key: ((azure_credentials.storage_key_1))
        azure-different-storage-account: ((azure_credentials.storage_account_2))
        azure-different-storage-key: ((azure_credentials.storage_key_2))
        azure-different-container-name: bbr-system-test-azure-different-container
      source_file: source-file/source-file.yml

- name: deploy-gcs-blobstore-sdk
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [build-rc]
    - get: backup-and-restore-sdk-release
      resource: backup-and-restore-sdk-release
      passed: [build-rc]
    - get: release-tarball
      trigger: true
      resource: release
      passed: [build-rc]
    - get: xenial-stemcell
    - get: bbl-state-bosh-lite
  - task: generate-bosh-deployment-source-file
    file: backup-and-restore-sdk-release/ci/tasks/bosh-deployment-resource-source-file-adapter/task.yml
    params:
      BBL_STATE: .
  - put: gcs-blobstore-sdk-deployment
    params:
      manifest: backup-and-restore-sdk-release/ci/manifests/gcs-backuper.yml
      stemcells:
      - xenial-stemcell/*.tgz
      releases:
      - release-tarball/backup-and-restore-sdk-*.tgz
      vars:
        deployment-name: gcs-backuper
        gcp-service-account-key: ((gcp/service_accounts/owner_role.json_key))
        gcs-bucket-name: bbr-system-test-gcs-bucket
        gcs-backup-bucket-name: bbr-system-test-gcs-backup-bucket
      source_file: source-file/source-file.yml
