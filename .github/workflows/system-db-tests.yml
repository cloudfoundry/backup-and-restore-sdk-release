on:
  pull_request:
    branches:
      - main

jobs:
  system-db-mariadb:
    name: System DB Tests for MariaDB
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stemcell-name: [ubuntu-bionic, ubuntu-jammy, ubuntu-xenial]
        mariadb-version: [10.9-jammy, 10.7-focal, 10.5-focal, 10.2-bionic]

    steps:
      - uses: actions/checkout@v3
        with:
          path: repo

      - name: Dockerize BOSH Release (Compilation Test)
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             docker-compose -f repo/docker-compose.yml run dockerize-release

      - name: Run System Tests for MariaDB
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             MARIADB_VERSION="${{ matrix.mariadb-version }}" \
             MARIADB_PASSWORD="$(head /dev/urandom | md5sum | cut -f1 -d" ")" \
             docker-compose -f repo/docker-compose.yml run system-db-mariadb || (docker-compose -f repo/docker-compose.yml logs system-db-mariadb-backing-db && exit 1)

  system-db-mysql:
    name: System DB Tests for MySQL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stemcell-name: [ubuntu-bionic, ubuntu-jammy, ubuntu-xenial]
        mysql-version: [8.0-debian, 8.0-oracle, 5.7-debian]
        exclude:
        - stemcell-name: ubuntu-xenial
          mysql-version: 8.0-debian
        - stemcell-name: ubuntu-xenial
          mysql-version: 8.0-oracle

    steps:
      - uses: actions/checkout@v3
        with:
          path: repo

      - name: Dockerize BOSH Release (Compilation Test)
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             docker-compose -f repo/docker-compose.yml run dockerize-release

      - name: Run System Tests for MySQL
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             MYSQL_VERSION="${{ matrix.mysql-version }}" \
             MYSQL_PASSWORD="$(head /dev/urandom | md5sum | cut -f1 -d" ")" \
             docker-compose -f repo/docker-compose.yml run system-db-mysql || (docker-compose -f repo/docker-compose.yml logs system-db-mysql-backing-db && exit 1)

  system-db-postgres:
    name: System DB Tests for Postgres
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stemcell-name: [ubuntu-bionic, ubuntu-jammy, ubuntu-xenial]
        postgres-version: [13-bullseye, 11-bullseye, 10-bullseye, 9.6-bullseye, 9.4-alpine]

    steps:
      - uses: actions/checkout@v3
        with:
          path: repo

      - name: Dockerize BOSH Release (Compilation Test)
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             docker-compose -f repo/docker-compose.yml run dockerize-release

      - name: Run System Tests for Postgres
        run: |
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             POSTGRES_VERSION="${{ matrix.postgres-version }}" \
             POSTGRES_PASSWORD="$(head /dev/urandom | md5sum | cut -f1 -d" ")" \
             docker-compose -f repo/docker-compose.yml run system-db-postgres || (docker-compose -f repo/docker-compose.yml logs system-db-postgres-backing-db && exit 1)
             docker-compose -f repo/docker-compose.yml down -v --remove-orphans --rmi local

      - name: Run System Tests for Postgres with TLS
        if: ${{ matrix.postgres-version != '9.4-alpine' }}
        run: |
             ENABLE_TLS="yes" \
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             POSTGRES_VERSION="${{ matrix.postgres-version }}" \
             POSTGRES_PASSWORD="$(head /dev/urandom | md5sum | cut -f1 -d" ")" \
             docker-compose -f repo/docker-compose.yml run system-db-postgres || (docker-compose -f repo/docker-compose.yml logs system-db-postgres-backing-db && exit 1)
             docker-compose -f repo/docker-compose.yml down -v --remove-orphans --rmi local

      - name: Run System Tests for Postgres with MUTUAL_TLS
        if: ${{ matrix.postgres-version != '9.4-alpine' }}
        run: |
             ENABLE_TLS="mutual" \
             STEMCELL_NAME="${{ matrix.stemcell-name }}" \
             POSTGRES_VERSION="${{ matrix.postgres-version }}" \
             POSTGRES_PASSWORD="$(head /dev/urandom | md5sum | cut -f1 -d" ")" \
             docker-compose -f repo/docker-compose.yml run system-db-postgres || (docker-compose -f repo/docker-compose.yml logs system-db-postgres-backing-db && exit 1)
             docker-compose -f repo/docker-compose.yml down -v --remove-orphans --rmi local
