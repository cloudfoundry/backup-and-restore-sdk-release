#!/usr/bin/env bash

# Copyright (C) 2017-Present Pivotal Software, Inc. All rights reserved.
#
# This program and the accompanying materials are made available under
# the terms of the under the Apache License, Version 2.0 (the "License”);
# you may not use this file except in compliance with the License.
#
# You may obtain a copy of the License at
# http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.

# abort script on any command that exits with a non zero value
set -e

MARIADB_VERSION=10.6.17
MY_DIR=$(pwd)


# This is a bit weird and usually won't work. As the stuff we copy below will only
# ever be present on a compilation VM. But it turns out that mariadb cmake setup 
# will try to download libpcre2 from github if it is not found on the system. 
# There is also no option to specify an external location as the options for WITH_PCRE
# only recognize `auto`, `bundled` or `system`
cp -r /var/vcap/packages/libpcre2/lib/* /usr/local/lib/
cp -r /var/vcap/packages/libpcre2/bin/* /usr/local/bin/
cp -r /var/vcap/packages/libpcre2/include/* /usr/local/include


tar xzf mariadb/mariadb-${MARIADB_VERSION}.tar.gz
(
  set -e
  cd mariadb-${MARIADB_VERSION}*
  mkdir bld
  cd bld

  cmake ../ \
      -DCMAKE_INSTALL_PREFIX=${BOSH_INSTALL_TARGET} \
      -DCMAKE_BUILD_TYPE=MinSizeRel \
      -DBUILD_STATIC_LIBS=ON \
      -DWITHOUT_SERVER=ON \
      -DWITH_EMBEDDED_SERVER=OFF \
      -DWITH_SSL=system \
      -DWITH_WSREP=ON \
      -DWITH_SYSTEMD=no \
      -DWITH_INNODB_DISALLOW_WRITES=1 \
      -DWITH_PCRE=system

  #
  # Go Agent cannot handle more than 10MB output, so trim it
  #
  set +e
  make -j 3 > build.out 2> build.err
  BUILD_EXIT_CODE=$?
  set -e

  if [ $BUILD_EXIT_CODE -ne 0 ]; then
      tail -n 1000 build.err
      exit $BUILD_EXIT_CODE
  fi
  tail -n 1000 build.out

  make install > build.out 2> build.err
  BUILD_EXIT_CODE=$?
  set -e

  if [ $BUILD_EXIT_CODE -ne 0 ]; then
      tail -n 1000 build.err
      exit $BUILD_EXIT_CODE
  fi
  tail -n 1000 build.out

  rm -rf ${BOSH_INSTALL_TARGET}/mysql-test/
  rm -rf ${BOSH_INSTALL_TARGET}/man

  echo -n "${MARIADB_VERSION}-MariaDB" > ${BOSH_INSTALL_TARGET}/VERSION
)
